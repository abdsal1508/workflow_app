# Generated by Django 3.2.25 on 2025-09-18 12:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ActionEmailMapping',
            fields=[
                ('action_email_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_master_id', models.IntegerField(blank=True, null=True)),
                ('from_email_id', models.CharField(blank=True, max_length=100, null=True)),
                ('to_email_id', models.CharField(blank=True, max_length=100, null=True)),
                ('cc_email_id', models.CharField(blank=True, max_length=100, null=True)),
                ('bcc_email_id', models.CharField(blank=True, max_length=100, null=True)),
                ('template_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'action_email_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActionMaster',
            fields=[
                ('action_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_name', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'action_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgencyCodeDetails',
            fields=[
                ('agency_code_id', models.AutoField(primary_key=True, serialize=False)),
                ('agency_code', models.CharField(blank=True, max_length=30, null=True)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('airline_code', models.CharField(max_length=2)),
                ('code_type', models.CharField(max_length=2)),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agency_code_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgencyCodeHistory',
            fields=[
                ('agency_code_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('agency_code_id', models.IntegerField(blank=True, null=True)),
                ('agency_code', models.CharField(blank=True, max_length=30, null=True)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('airline_code', models.CharField(max_length=2)),
                ('code_type', models.CharField(max_length=2)),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agency_code_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgencyCodeUserMapping',
            fields=[
                ('agency_code_user_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('agency_code_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agency_code_user_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgencyPaymentFailedHistory',
            fields=[
                ('agency_payment_failed_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_master_id', models.IntegerField(blank=True, null=True)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('payment_type_id', models.IntegerField(blank=True, null=True)),
                ('pnr', models.CharField(blank=True, max_length=10, null=True)),
                ('amount_to_pay', models.FloatField(blank=True, null=True)),
                ('paid_by', models.IntegerField(blank=True, null=True)),
                ('agent_id', models.CharField(blank=True, max_length=200, null=True)),
                ('pnr_status', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=20, null=True)),
                ('card_authorization', models.CharField(blank=True, max_length=20, null=True)),
                ('error', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agency_payment_failed_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AirlinesRequestMapping',
            fields=[
                ('airlines_request_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('current_status', models.IntegerField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('request_upload_batch_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'airlines_request_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AirportDetails',
            fields=[
                ('airport_id', models.AutoField(primary_key=True, serialize=False)),
                ('airport_code', models.CharField(max_length=3, unique=True)),
                ('airport_name', models.CharField(blank=True, max_length=100, null=True)),
                ('country_code', models.CharField(max_length=2)),
                ('display_status', models.CharField(max_length=1)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'airport_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlternateSeriesRequestDetails',
            fields=[
                ('alternate_series_request_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_master_id', models.IntegerField(blank=True, null=True)),
                ('series_request_id', models.IntegerField(blank=True, null=True)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('origin', models.CharField(blank=True, max_length=3, null=True)),
                ('destination', models.CharField(blank=True, max_length=3, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('number_of_passenger', models.IntegerField(blank=True, null=True)),
                ('number_of_adult', models.IntegerField(blank=True, null=True)),
                ('number_of_child', models.IntegerField(blank=True, null=True)),
                ('number_of_infant', models.IntegerField(blank=True, null=True)),
                ('cabin', models.CharField(blank=True, max_length=20, null=True)),
                ('start_time', models.CharField(blank=True, max_length=20, null=True)),
                ('end_time', models.CharField(blank=True, max_length=5, null=True)),
                ('baggage_allowance', models.CharField(blank=True, max_length=250, null=True)),
                ('ancillary', models.CharField(blank=True, max_length=5, null=True)),
                ('meals_code', models.CharField(blank=True, max_length=5, null=True)),
                ('pnr', models.CharField(blank=True, max_length=25, null=True)),
                ('expected_fare', models.FloatField(blank=True, null=True)),
                ('group_category_id', models.IntegerField(blank=True, null=True)),
                ('flight_status', models.CharField(blank=True, max_length=5, null=True)),
                ('response_id', models.IntegerField(blank=True, null=True)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('mapped_series_request_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alternate_series_request_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttachmentDetails',
            fields=[
                ('attachment_id', models.AutoField(primary_key=True, serialize=False)),
                ('attachment_type_id', models.IntegerField()),
                ('attachment_name', models.CharField(max_length=255)),
                ('mime_type', models.CharField(max_length=255)),
                ('file_szie', models.CharField(max_length=64)),
                ('meta_info', models.CharField(max_length=255)),
                ('original_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'attachment_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttachmentLog',
            fields=[
                ('attachment_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(max_length=8)),
                ('attachment_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('create_datetime', models.DateTimeField()),
                ('update_timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'attachment_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttachmentMapping',
            fields=[
                ('attachment_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('attachment_type_id', models.IntegerField()),
                ('attachment_id', models.IntegerField()),
                ('id', models.IntegerField()),
            ],
            options={
                'db_table': 'attachment_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttachmentTypeMaster',
            fields=[
                ('attachment_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('attachment_type', models.CharField(max_length=64)),
                ('attachment_folder', models.CharField(max_length=64)),
                ('mapping_ref_table', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'attachment_type_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AttachmentUserMapping',
            fields=[
                ('attachment_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('attachment_id', models.IntegerField()),
                ('level', models.CharField(max_length=5)),
                ('id', models.IntegerField()),
                ('status', models.CharField(max_length=1)),
                ('create_timestamp', models.DateTimeField()),
                ('update_timestamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'attachment_user_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthtokenToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'authtoken_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoPilotCriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(blank=True, max_length=100, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('negotiation_auto_pilot_display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('criteria_logical_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auto_pilot_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoPilotPolicyDetails',
            fields=[
                ('policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField()),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'auto_pilot_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutoPilotPolicyMaster',
            fields=[
                ('policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('process_type', models.CharField(blank=True, max_length=2, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('policy_type', models.CharField(blank=True, max_length=1, null=True)),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': 'auto_pilot_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaggageDetails',
            fields=[
                ('baggage_id', models.AutoField(primary_key=True, serialize=False)),
                ('baggage_name', models.CharField(blank=True, max_length=250, null=True)),
                ('baggage_code', models.CharField(max_length=5)),
                ('baggage_cabin', models.CharField(max_length=25)),
                ('baggage_market', models.CharField(max_length=25)),
                ('pax_type', models.CharField(max_length=10)),
                ('baggage_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'baggage_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaggageMapping',
            fields=[
                ('baggage_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('baggage_matrix_id', models.IntegerField(blank=True, null=True)),
                ('days_to_departure', models.IntegerField(blank=True, null=True)),
                ('booked_load_factor', models.IntegerField(blank=True, null=True)),
                ('forecast_load_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'baggage_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaggageMatrix',
            fields=[
                ('baggage_matrix_id', models.AutoField(primary_key=True, serialize=False)),
                ('baggage_matrix_name', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('load_factor_type', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'baggage_matrix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaggageValueMapping',
            fields=[
                ('baggage_value_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('baggage_mapping_id', models.IntegerField(blank=True, null=True)),
                ('group_size', models.IntegerField(blank=True, null=True)),
                ('baggage_code', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'baggage_value_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('bank_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('bank_name', models.CharField(blank=True, max_length=70, null=True)),
                ('account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('branch_code', models.CharField(blank=True, max_length=50, null=True)),
                ('beneficiary_name', models.CharField(blank=True, max_length=50, null=True)),
                ('additional_data', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'bank_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BankPosMapping',
            fields=[
                ('bank_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('bank_details_id', models.IntegerField(blank=True, null=True)),
                ('pos_id', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'bank_pos_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BatchDetails',
            fields=[
                ('batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('initiated_by', models.IntegerField(blank=True, null=True)),
                ('batch_date', models.DateTimeField()),
                ('batch_status', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'batch_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BidPriceDetails',
            fields=[
                ('bid_price_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_approved_flight_id', models.IntegerField(blank=True, null=True)),
                ('via_flight_id', models.IntegerField(blank=True, null=True)),
                ('bid_fare', models.FloatField(blank=True, null=True)),
                ('sold', models.IntegerField(blank=True, null=True)),
                ('seat_taken', models.IntegerField(blank=True, null=True)),
                ('bid_price_values', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bid_price_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BillingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.IntegerField(blank=True, null=True)),
                ('address_one', models.CharField(blank=True, max_length=40, null=True)),
                ('address_two', models.CharField(blank=True, max_length=40, null=True)),
                ('address_three', models.CharField(blank=True, max_length=40, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('pincode', models.CharField(blank=True, max_length=6, null=True)),
                ('area_code', models.CharField(blank=True, max_length=5, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile', models.CharField(blank=True, max_length=12, null=True)),
                ('email_id', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'billing_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookingProfileDetails',
            fields=[
                ('booking_profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_profile_name', models.CharField(blank=True, max_length=100, null=True)),
                ('booking_profile_type', models.CharField(blank=True, max_length=5, null=True)),
                ('load_factor_type', models.CharField(blank=True, max_length=5, null=True)),
                ('currency_type', models.CharField(blank=True, max_length=3, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'booking_profile_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CabinDetails',
            fields=[
                ('cabin_id', models.AutoField(primary_key=True, serialize=False)),
                ('cabin_name', models.CharField(blank=True, max_length=250, null=True)),
                ('cabin_status', models.CharField(blank=True, max_length=1, null=True)),
                ('cabin_value', models.CharField(blank=True, max_length=25, null=True)),
                ('pnr_blocking_class', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'cabin_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancelPnrDetails',
            fields=[
                ('cancel_pnr_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('request_approved_flight_id', models.IntegerField()),
                ('request_group_id', models.IntegerField(blank=True, null=True)),
                ('pnr', models.CharField(max_length=7)),
                ('cancelled_by', models.IntegerField()),
                ('status', models.CharField(max_length=20)),
                ('cancelled_date', models.DateTimeField()),
                ('cancel_remarks', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'cancel_pnr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancelPolicyCriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(max_length=100)),
                ('criteria_type', models.CharField(max_length=3)),
                ('display_status', models.CharField(max_length=1)),
                ('criteria_logical_id', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'cancel_policy_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancelPolicyDetails',
            fields=[
                ('cancel_policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('cancel_policy_name', models.CharField(blank=True, max_length=150, null=True)),
                ('cancel_policy_description', models.TextField(blank=True, null=True)),
                ('activation_status', models.CharField(blank=True, max_length=1, null=True)),
                ('default_status', models.CharField(blank=True, max_length=1, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cancel_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancelPolicyMatrixDetails',
            fields=[
                ('cancel_policy_matrix_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('cancel_policy_matrix_master_id', models.IntegerField()),
                ('criteria_id', models.IntegerField()),
                ('loop_value', models.IntegerField()),
                ('operator_id', models.IntegerField()),
                ('policy_value', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'cancel_policy_matrix_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CancelPolicyMatrixMaster',
            fields=[
                ('cancel_policy_matrix_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_name', models.CharField(max_length=100)),
                ('cancel_policy_id', models.IntegerField()),
                ('priority', models.IntegerField()),
                ('active_status', models.CharField(max_length=1)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_date', models.DateTimeField()),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'cancel_policy_matrix_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CardDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.IntegerField(blank=True, null=True)),
                ('card_type', models.CharField(blank=True, max_length=5, null=True)),
                ('card_number', models.CharField(blank=True, max_length=30, null=True)),
                ('cvv_number', models.CharField(blank=True, max_length=30, null=True)),
                ('expdate_year', models.CharField(blank=True, max_length=5, null=True)),
                ('expdate_mon', models.CharField(blank=True, max_length=2, null=True)),
                ('name_on_card', models.CharField(blank=True, max_length=40, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'card_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CardDetailsHistory',
            fields=[
                ('card_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_id', models.IntegerField(blank=True, null=True)),
                ('card_type', models.CharField(blank=True, max_length=5, null=True)),
                ('card_number', models.CharField(blank=True, max_length=100, null=True)),
                ('cvv_number', models.CharField(blank=True, max_length=30, null=True)),
                ('expdate_year', models.CharField(blank=True, max_length=30, null=True)),
                ('expdate_mon', models.CharField(blank=True, max_length=30, null=True)),
                ('name_on_card', models.CharField(blank=True, max_length=30, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'card_details_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategorySubcategoryAccessMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_category_id', models.IntegerField(blank=True, null=True)),
                ('issue_subcategory_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'category_subcategory_access_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CitizenshipDetails',
            fields=[
                ('citizenship_id', models.AutoField(primary_key=True, serialize=False)),
                ('citizenship_name', models.CharField(blank=True, max_length=100, null=True)),
                ('citizen_code', models.CharField(blank=True, max_length=3, null=True, unique=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('currency_code', models.CharField(max_length=5)),
                ('phone_code', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'citizenship_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CityMaster',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(blank=True, db_collation='utf8mb4_unicode_ci', max_length=40, null=True)),
                ('pos_code', models.CharField(max_length=5)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'city_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommonPolicyDetails',
            fields=[
                ('policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
                ('loop_value', models.IntegerField()),
            ],
            options={
                'db_table': 'common_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommonPolicyMaster',
            fields=[
                ('policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_type_id', models.IntegerField(blank=True, null=True)),
                ('policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('matrix_id', models.IntegerField(blank=True, null=True)),
                ('matrix_type', models.CharField(blank=True, max_length=5, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('active_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('negotiation_status', models.CharField(blank=True, max_length=1, null=True)),
                ('negotiation_limit', models.CharField(blank=True, max_length=10, null=True)),
                ('materialization_rate', models.FloatField(blank=True, null=True)),
                ('conversion_rate', models.CharField(blank=True, max_length=1, null=True)),
                ('prediction_type', models.CharField(blank=True, max_length=5, null=True)),
                ('process_type', models.CharField(blank=True, max_length=2, null=True)),
                ('spl_fare_type', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_discount', models.CharField(blank=True, max_length=1, null=True)),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('policy_string', models.TextField()),
                ('fare_range', models.TextField(blank=True, null=True)),
                ('additional_details', models.TextField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'common_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorFareBatchDetails',
            fields=[
                ('batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('folder_name', models.CharField(blank=True, max_length=200, null=True)),
                ('file_count', models.IntegerField(blank=True, null=True)),
                ('processed_file_count', models.IntegerField(blank=True, null=True)),
                ('backup_zip_file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('batch_type', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('batch_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_fare_batch_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorFareBatchFileDetails',
            fields=[
                ('batch_file_id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('status_msg', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('moved_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_fare_batch_file_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorFlightDetails',
            fields=[
                ('competitor_flight_id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('batch_file_id', models.IntegerField(blank=True, null=True)),
                ('origin', models.CharField(blank=True, max_length=3, null=True)),
                ('destination', models.CharField(blank=True, max_length=3, null=True)),
                ('carrier', models.CharField(blank=True, max_length=5, null=True)),
                ('trip_type', models.CharField(blank=True, max_length=1, null=True)),
                ('onward_departure_date', models.DateField(blank=True, null=True)),
                ('onward_departure_time', models.TimeField(blank=True, null=True)),
                ('onward_arrival_date', models.DateField(blank=True, null=True)),
                ('onward_arrival_time', models.TimeField(blank=True, null=True)),
                ('return_departure_date', models.DateField(blank=True, null=True)),
                ('return_departure_time', models.TimeField(blank=True, null=True)),
                ('return_arrival_date', models.DateField(blank=True, null=True)),
                ('return_arrival_time', models.TimeField(blank=True, null=True)),
                ('onward_stop', models.IntegerField(blank=True, null=True)),
                ('onward_flight', models.CharField(blank=True, max_length=20, null=True)),
                ('onward_class', models.CharField(blank=True, max_length=20, null=True)),
                ('return_stop', models.IntegerField(blank=True, null=True)),
                ('return_flight', models.CharField(blank=True, max_length=20, null=True)),
                ('return_class', models.CharField(blank=True, max_length=20, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=5, null=True)),
                ('base_fare', models.FloatField(blank=True, null=True)),
                ('tax', models.FloatField(blank=True, null=True)),
                ('total_fare', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_flight_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorFlightDetailsTemp',
            fields=[
                ('competitor_flight_id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_id', models.IntegerField(blank=True, null=True)),
                ('batch_file_id', models.IntegerField(blank=True, null=True)),
                ('origin', models.CharField(blank=True, max_length=3, null=True)),
                ('destination', models.CharField(blank=True, max_length=3, null=True)),
                ('carrier', models.CharField(blank=True, max_length=5, null=True)),
                ('trip_type', models.CharField(blank=True, max_length=1, null=True)),
                ('onward_departure_date', models.DateField(blank=True, null=True)),
                ('onward_departure_time', models.TimeField(blank=True, null=True)),
                ('onward_arrival_date', models.DateField(blank=True, null=True)),
                ('onward_arrival_time', models.TimeField(blank=True, null=True)),
                ('return_departure_date', models.DateField(blank=True, null=True)),
                ('return_departure_time', models.TimeField(blank=True, null=True)),
                ('return_arrival_date', models.DateField(blank=True, null=True)),
                ('return_arrival_time', models.TimeField(blank=True, null=True)),
                ('onward_stop', models.IntegerField(blank=True, null=True)),
                ('onward_flight', models.CharField(blank=True, max_length=20, null=True)),
                ('onward_class', models.CharField(blank=True, max_length=20, null=True)),
                ('return_stop', models.IntegerField(blank=True, null=True)),
                ('return_flight', models.CharField(blank=True, max_length=20, null=True)),
                ('return_class', models.CharField(blank=True, max_length=20, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=5, null=True)),
                ('base_fare', models.FloatField(blank=True, null=True)),
                ('tax', models.FloatField(blank=True, null=True)),
                ('total_fare', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_flight_details_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorPolicyCriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(blank=True, max_length=100, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('logical_name', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_policy_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorPolicyDetails',
            fields=[
                ('policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'competitor_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorPolicyMaster',
            fields=[
                ('policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('competitor_rule_master_id', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorRuleAirlineDetails',
            fields=[
                ('competitor_rule_airline_id', models.AutoField(primary_key=True, serialize=False)),
                ('competitor_rule_master_id', models.IntegerField(blank=True, null=True)),
                ('airline_code', models.CharField(blank=True, max_length=7, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=7, null=True)),
                ('departure_operator', models.CharField(blank=True, max_length=15, null=True)),
                ('depart_time_range', models.CharField(blank=True, max_length=15, null=True)),
                ('depart_fare_validity_type_id', models.CharField(blank=True, max_length=15, null=True)),
                ('arrival_operator', models.CharField(blank=True, max_length=15, null=True)),
                ('arrival_time_range', models.CharField(blank=True, max_length=15, null=True)),
                ('arrival_fare_validity_type_id', models.CharField(blank=True, max_length=15, null=True)),
                ('additive_factor', models.FloatField(blank=True, null=True)),
                ('multiplicative_factor', models.FloatField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'competitor_rule_airline_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorRuleCriteriaMaster',
            fields=[
                ('competitor_criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('competitor_criteria_name', models.CharField(blank=True, max_length=50, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('show_status', models.CharField(blank=True, max_length=1, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('criteria_logic_name', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_rule_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorRuleDetails',
            fields=[
                ('competitor_rule_id', models.AutoField(primary_key=True, serialize=False)),
                ('competitor_rule_master_id', models.IntegerField(blank=True, null=True)),
                ('competitor_criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('competitor_criteria_value', models.CharField(blank=True, max_length=200, null=True)),
                ('fare_validity_type_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_rule_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorRuleMaster',
            fields=[
                ('competitor_rule_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('competitor_rule_name', models.CharField(blank=True, max_length=20, null=True)),
                ('minimum_fare', models.FloatField(blank=True, null=True)),
                ('maximum_fare', models.FloatField(blank=True, null=True)),
                ('calculate_using', models.CharField(blank=True, max_length=1, null=True)),
                ('include_connecting_flights', models.CharField(blank=True, max_length=1, null=True)),
                ('include_hub', models.CharField(blank=True, max_length=1, null=True)),
                ('fare_taken', models.CharField(max_length=3)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_rule_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorTimeFrameDetails',
            fields=[
                ('competitor_time_frame_id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=3, null=True)),
                ('destination', models.CharField(blank=True, max_length=3, null=True)),
                ('carrier', models.CharField(blank=True, max_length=5, null=True)),
                ('interval_value', models.IntegerField(blank=True, null=True)),
                ('interval_type', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_time_frame_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompetitorViaFlightDetails',
            fields=[
                ('competitor_via_flight_id', models.AutoField(primary_key=True, serialize=False)),
                ('competitor_flight_id', models.IntegerField(blank=True, null=True)),
                ('origin', models.CharField(blank=True, max_length=3, null=True)),
                ('destination', models.CharField(blank=True, max_length=3, null=True)),
                ('carrier', models.CharField(blank=True, max_length=5, null=True)),
                ('flight', models.CharField(blank=True, max_length=20, null=True)),
                ('travel_type', models.CharField(blank=True, max_length=1, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('departure_time', models.TimeField(blank=True, null=True)),
                ('arrival_date', models.DateField(blank=True, null=True)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('class_field', models.CharField(blank=True, db_column='class', max_length=20, null=True)),
                ('currency_code', models.CharField(blank=True, max_length=5, null=True)),
                ('base_fare', models.FloatField(blank=True, null=True)),
                ('tax', models.FloatField(blank=True, null=True)),
                ('total_fare', models.FloatField(blank=True, null=True)),
                ('segment_order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'competitor_via_flight_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractManagerDetails',
            fields=[
                ('contract_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('contract_manager_master_id', models.IntegerField(blank=True, null=True)),
                ('contract_type', models.CharField(max_length=25)),
                ('contract_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contract_manager_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ContractManagerMaster',
            fields=[
                ('contract_manager_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('contract_manager_name', models.CharField(blank=True, max_length=100, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('activation_status', models.CharField(blank=True, max_length=1, null=True)),
                ('default_status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField()),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.IntegerField()),
            ],
            options={
                'db_table': 'contract_manager_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorporateDetails',
            fields=[
                ('corporate_id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_type_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('corporate_name', models.CharField(blank=True, max_length=100, null=True)),
                ('agent_name', models.CharField(blank=True, max_length=52, null=True)),
                ('iata_code', models.CharField(blank=True, max_length=36, null=True)),
                ('pcc_code', models.CharField(blank=True, max_length=36, null=True)),
                ('airlines_code', models.CharField(blank=True, max_length=3, null=True)),
                ('corporate_address', models.CharField(blank=True, max_length=256, null=True)),
                ('fax', models.CharField(blank=True, max_length=32, null=True)),
                ('office_number', models.CharField(blank=True, max_length=32, null=True)),
                ('corporate_status', models.CharField(max_length=1)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('time_zone_interval', models.CharField(blank=True, max_length=40, null=True)),
                ('time_zone_key', models.CharField(blank=True, max_length=352, null=True)),
                ('pos_code', models.CharField(blank=True, max_length=32, null=True)),
                ('customer_category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'corporate_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorporateExtjsReports',
            fields=[
                ('report_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('report_name', models.CharField(blank=True, max_length=100, null=True)),
                ('report_file_name', models.CharField(blank=True, max_length=100, null=True)),
                ('view_name', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'corporate_extjs_reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorporateHomePageDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('header_tpl_name', models.CharField(blank=True, max_length=50, null=True)),
                ('footer_tpl_name', models.CharField(blank=True, max_length=50, null=True)),
                ('landing_status', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'corporate_home_page_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorporateModuleSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('module_id', models.IntegerField(blank=True, null=True)),
                ('template_id', models.IntegerField(blank=True, null=True)),
                ('target_template_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'corporate_module_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorporateSalespersonMapping',
            fields=[
                ('salesperson_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'corporate_salesperson_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorporateSubmenuSettings',
            fields=[
                ('corporate_submenu_settings_id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('submenu_id', models.IntegerField()),
                ('submenu_name', models.CharField(blank=True, max_length=50, null=True)),
                ('submenu_link', models.CharField(blank=True, max_length=100, null=True)),
                ('menu_id', models.IntegerField(blank=True, null=True)),
                ('display_status', models.CharField(blank=True, max_length=3, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'corporate_submenu_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorporateTypeDetails',
            fields=[
                ('corporate_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_type_name', models.CharField(blank=True, max_length=30, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'corporate_type_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(blank=True, max_length=100, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('criteria_logical_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('surcharge_status', models.CharField(blank=True, max_length=1, null=True)),
                ('farerequote', models.CharField(blank=True, max_length=1, null=True)),
                ('negotiateautopilot', models.CharField(blank=True, db_column='negotiateAutoPilot', max_length=1, null=True)),
                ('aggregatefunction', models.CharField(blank=True, db_column='aggregateFunction', max_length=1, null=True)),
                ('autopilotpolicy', models.CharField(blank=True, db_column='autoPilotPolicy', max_length=1, null=True)),
                ('cancelpolicy', models.CharField(blank=True, db_column='cancelPolicy', max_length=1, null=True)),
                ('timelinepolicy', models.CharField(blank=True, db_column='timeLinePolicy', max_length=1, null=True)),
                ('negotiationpolicy', models.CharField(blank=True, db_column='negotiationPolicy', max_length=1, null=True)),
                ('nameupdatepolicy', models.CharField(blank=True, db_column='nameUpdatePolicy', max_length=1, null=True)),
                ('farepolicy', models.CharField(blank=True, db_column='farePolicy', max_length=1, null=True)),
                ('predictionpolicy', models.CharField(db_column='predictionPolicy', max_length=1)),
                ('fareclasspolicy', models.CharField(blank=True, db_column='fareClassPolicy', max_length=1, null=True)),
                ('farebasispolicy', models.CharField(blank=True, db_column='fareBasisPolicy', max_length=1, null=True)),
                ('contractmanager', models.CharField(blank=True, db_column='contractManager', max_length=1, null=True)),
                ('baggagepolicy', models.CharField(blank=True, db_column='baggagePolicy', max_length=1, null=True)),
                ('farerangepolicy', models.CharField(blank=True, db_column='fareRangePolicy', max_length=1, null=True)),
            ],
            options={
                'db_table': 'criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CronEmailDetails',
            fields=[
                ('cron_email_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('email_type', models.IntegerField()),
                ('email_subject', models.CharField(max_length=50)),
                ('sent_to', models.CharField(max_length=70)),
                ('expiry_date', models.CharField(max_length=20)),
                ('sent_date', models.DateTimeField()),
                ('pnr', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'cron_email_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CronjobJobprogress',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('job_id', models.CharField(max_length=150, unique=True)),
                ('task_id', models.CharField(blank=True, max_length=150, null=True)),
                ('progress_percent', models.IntegerField()),
                ('status', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('checkpoint_data', models.JSONField(blank=True, null=True)),
                ('last_step', models.CharField(blank=True, max_length=50, null=True)),
                ('last_processed_line', models.IntegerField()),
                ('total_lines', models.IntegerField()),
            ],
            options={
                'db_table': 'cronjob_jobprogress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CronjobScheduledtask',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('enabled', models.IntegerField()),
                ('task_path', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'cronjob_scheduledtask',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CronjobTasklog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('task_id', models.CharField(max_length=150)),
                ('message', models.TextField()),
                ('status', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'cronjob_tasklog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CronUpdatePnrDetails',
            fields=[
                ('cron_update_pnr_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('series_request_id', models.IntegerField()),
                ('pnr_updated_status', models.CharField(max_length=15)),
                ('pnr_updated_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'cron_update_pnr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrencyDetails',
            fields=[
                ('currency_id', models.AutoField(primary_key=True, serialize=False)),
                ('currency_type', models.CharField(blank=True, max_length=3, null=True, unique=True)),
                ('currency_symbol', models.CharField(max_length=5)),
                ('exchange_rate', models.FloatField()),
                ('decimal_precision', models.IntegerField()),
                ('display_order', models.IntegerField()),
                ('created_date', models.DateField()),
                ('currency_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'currency_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrencyMapping',
            fields=[
                ('currency_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('pos_id', models.IntegerField()),
                ('currency_id', models.IntegerField()),
                ('country_code', models.CharField(max_length=3)),
                ('display_in_request', models.CharField(max_length=1)),
                ('display_in_payment', models.CharField(max_length=4)),
            ],
            options={
                'db_table': 'currency_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerCategory',
            fields=[
                ('customer_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_category_name', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=1)),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'customer_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerInsightMaster',
            fields=[
                ('customer_insight_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('pnr', models.CharField(blank=True, max_length=6, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=100, null=True)),
                ('login_id', models.CharField(blank=True, max_length=100, null=True)),
                ('account_password', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'customer_insight_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomReportDetails',
            fields=[
                ('custom_report_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_type', models.CharField(max_length=30)),
                ('report_type_language', models.CharField(max_length=100)),
                ('based_on', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('display_status', models.CharField(max_length=1)),
                ('default_selected', models.CharField(max_length=1)),
                ('menu_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'custom_report_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomReportValues',
            fields=[
                ('custom_report_values_id', models.AutoField(primary_key=True, serialize=False)),
                ('values_name', models.CharField(max_length=300)),
                ('values_language', models.CharField(max_length=300)),
                ('service_name', models.CharField(max_length=300)),
                ('values_functionality', models.CharField(max_length=2)),
                ('values_type', models.CharField(max_length=1)),
                ('display_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'custom_report_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomReportValuesMapping',
            fields=[
                ('custom_report_values_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('custom_report_values_id', models.IntegerField()),
                ('custom_report_id', models.IntegerField()),
                ('header_id', models.IntegerField()),
                ('parent_id', models.IntegerField(blank=True, null=True)),
                ('corporate_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('display_status', models.CharField(max_length=1)),
                ('menu_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'custom_report_values_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DailyProductDetails',
            fields=[
                ('daily_product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('booking_profile_id', models.IntegerField(blank=True, null=True)),
                ('cabin_code', models.CharField(blank=True, max_length=1, null=True)),
                ('date_departure', models.DateField(blank=True, null=True)),
                ('time_departure', models.CharField(blank=True, max_length=5, null=True)),
                ('time_arrival', models.CharField(blank=True, max_length=5, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('current_bookings', models.IntegerField(blank=True, null=True)),
                ('booking_fare', models.FloatField(blank=True, null=True)),
                ('last_updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'daily_product_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountFareMapping',
            fields=[
                ('discount_fare_id', models.AutoField(primary_key=True, serialize=False)),
                ('discount_mapping_id', models.IntegerField(blank=True, null=True)),
                ('group_size', models.IntegerField(blank=True, null=True)),
                ('discount_fare', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'discount_fare_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountMappingDetails',
            fields=[
                ('discount_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('discount_matrix_id', models.IntegerField(blank=True, null=True)),
                ('days_to_departure', models.IntegerField(blank=True, null=True)),
                ('booked_load_factor', models.IntegerField(blank=True, null=True)),
                ('forecast_load_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'discount_mapping_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountMatrix',
            fields=[
                ('discount_matrix_id', models.AutoField(primary_key=True, serialize=False)),
                ('discount_matrix_name', models.CharField(blank=True, max_length=50, null=True)),
                ('discount_matrix_type', models.CharField(blank=True, max_length=5, null=True)),
                ('currency_type', models.CharField(blank=True, max_length=5, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('load_factor_type', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'discount_matrix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoApschedulerDjangojob',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('next_run_time', models.DateTimeField(blank=True, null=True)),
                ('job_state', models.TextField()),
            ],
            options={
                'db_table': 'django_apscheduler_djangojob',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoApschedulerDjangojobexecution',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=50)),
                ('run_time', models.DateTimeField()),
                ('duration', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('finished', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('exception', models.CharField(blank=True, max_length=1000, null=True)),
                ('traceback', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'django_apscheduler_djangojobexecution',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatClockedschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clocked_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_celery_beat_clockedschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatCrontabschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.CharField(max_length=240)),
                ('hour', models.CharField(max_length=96)),
                ('day_of_week', models.CharField(max_length=64)),
                ('day_of_month', models.CharField(max_length=124)),
                ('month_of_year', models.CharField(max_length=64)),
                ('timezone', models.CharField(max_length=63)),
            ],
            options={
                'db_table': 'django_celery_beat_crontabschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatIntervalschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('every', models.IntegerField()),
                ('period', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'django_celery_beat_intervalschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatPeriodictask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('task', models.CharField(max_length=200)),
                ('args', models.TextField()),
                ('kwargs', models.TextField()),
                ('queue', models.CharField(blank=True, max_length=200, null=True)),
                ('exchange', models.CharField(blank=True, max_length=200, null=True)),
                ('routing_key', models.CharField(blank=True, max_length=200, null=True)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('enabled', models.IntegerField()),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('total_run_count', models.PositiveIntegerField()),
                ('date_changed', models.DateTimeField()),
                ('description', models.TextField()),
                ('one_off', models.IntegerField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('priority', models.PositiveIntegerField(blank=True, null=True)),
                ('headers', models.TextField()),
                ('expire_seconds', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'django_celery_beat_periodictask',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatPeriodictasks',
            fields=[
                ('ident', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('last_update', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_celery_beat_periodictasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatSolarschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=24)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
            ],
            options={
                'db_table': 'django_celery_beat_solarschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryResultsChordcounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=255, unique=True)),
                ('sub_tasks', models.TextField()),
                ('count', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'django_celery_results_chordcounter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryResultsGroupresult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=255, unique=True)),
                ('date_created', models.DateTimeField()),
                ('date_done', models.DateTimeField()),
                ('content_type', models.CharField(max_length=128)),
                ('content_encoding', models.CharField(max_length=64)),
                ('result', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'django_celery_results_groupresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryResultsTaskresult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(max_length=50)),
                ('content_type', models.CharField(max_length=128)),
                ('content_encoding', models.CharField(max_length=64)),
                ('result', models.TextField(blank=True, null=True)),
                ('date_done', models.DateTimeField()),
                ('traceback', models.TextField(blank=True, null=True)),
                ('meta', models.TextField(blank=True, null=True)),
                ('task_args', models.TextField(blank=True, null=True)),
                ('task_kwargs', models.TextField(blank=True, null=True)),
                ('task_name', models.CharField(blank=True, max_length=255, null=True)),
                ('worker', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField()),
                ('periodic_task_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_started', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'django_celery_results_taskresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCronCronjoblock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_name', models.CharField(max_length=200, unique=True)),
                ('locked', models.IntegerField()),
            ],
            options={
                'db_table': 'django_cron_cronjoblock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCronCronjoblog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('is_success', models.IntegerField()),
                ('message', models.TextField()),
                ('ran_at_time', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'django_cron_cronjoblog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EditUserHistory',
            fields=[
                ('edit_user_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('updated_by', models.IntegerField()),
                ('previous_user_details', models.TextField(blank=True, null=True)),
                ('time_stamp', models.DateTimeField(blank=True, null=True)),
                ('user_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'edit_user_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailSetting',
            fields=[
                ('email_setting_id', models.AutoField(primary_key=True, serialize=False)),
                ('email_type', models.CharField(blank=True, max_length=200, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('setting_status', models.CharField(blank=True, max_length=1, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_setting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTemplateDetails',
            fields=[
                ('email_template_id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
                ('email_setting_id', models.IntegerField()),
                ('template_id', models.IntegerField()),
                ('display_status', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'email_template_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmailTrackingDetails',
            fields=[
                ('tracking_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_request_id', models.CharField(blank=True, max_length=25, null=True)),
                ('email_type', models.IntegerField(blank=True, null=True)),
                ('from_email_id', models.CharField(blank=True, max_length=200, null=True)),
                ('to_email_id', models.CharField(blank=True, max_length=200, null=True)),
                ('to_user_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'email_tracking_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmdDetails',
            fields=[
                ('emd_id', models.AutoField(primary_key=True, serialize=False)),
                ('pnr_payment_id', models.IntegerField()),
                ('issued_document_number', models.CharField(blank=True, max_length=25, null=True)),
                ('emd_amount', models.FloatField()),
                ('issued_date', models.DateTimeField()),
                ('emd_type', models.CharField(blank=True, max_length=3, null=True)),
                ('emd_status', models.IntegerField()),
                ('passenger_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'emd_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExpiryTypeMaster',
            fields=[
                ('expiry_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('expiry_type_name', models.CharField(max_length=20)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'expiry_type_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalDataBatchDetails',
            fields=[
                ('extenal_data_batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('external_data_type', models.CharField(max_length=2)),
                ('file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('data_count', models.IntegerField(blank=True, null=True)),
                ('inserted_data_count', models.IntegerField(blank=True, null=True)),
                ('file_uploaded_date', models.DateTimeField(blank=True, null=True)),
                ('batch_date', models.DateTimeField(blank=True, null=True)),
                ('batch_updated_date', models.DateTimeField(blank=True, null=True)),
                ('batch_file_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'external_data_batch_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareClassCriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(blank=True, max_length=100, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('criteria_logical_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fare_class_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareClassMaster',
            fields=[
                ('fare_class_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_type_code', models.CharField(blank=True, max_length=100, null=True)),
                ('fare_class_name', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'fare_class_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareClassPolicyDetails',
            fields=[
                ('fare_class_policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_class_policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'fare_class_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareClassPolicyMaster',
            fields=[
                ('fare_class_policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_class_policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('discount_status', models.CharField(blank=True, max_length=1, null=True)),
                ('surcharge_status', models.CharField(max_length=1)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fare_class_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareDetails',
            fields=[
                ('fare_id', models.AutoField(primary_key=True, serialize=False)),
                ('series_flight_schedule_id', models.IntegerField(blank=True, null=True)),
                ('series_via_flight_id', models.IntegerField(blank=True, null=True)),
                ('adult_base_fare', models.FloatField()),
                ('adult_tax', models.FloatField(blank=True, null=True)),
                ('adult_discount', models.FloatField(blank=True, null=True)),
                ('child_base_fare', models.FloatField()),
                ('child_tax', models.FloatField(blank=True, null=True)),
                ('child_discount', models.FloatField(blank=True, null=True)),
                ('infant_base_fare', models.FloatField()),
                ('infant_tax', models.FloatField(blank=True, null=True)),
                ('meals_fare', models.FloatField()),
                ('baggage_fare', models.FloatField()),
                ('tiger_connect_fare', models.FloatField()),
                ('baggage_code', models.CharField(max_length=5)),
                ('fare_basis_code', models.CharField(blank=True, max_length=15, null=True)),
                ('rule_number', models.CharField(max_length=4)),
                ('fare_sequence', models.CharField(blank=True, max_length=250, null=True)),
                ('journey_sell_key', models.TextField(blank=True, null=True)),
                ('class_of_service', models.CharField(blank=True, max_length=3, null=True)),
                ('fare_application_type', models.CharField(max_length=10)),
                ('seat_availability', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('sold', models.IntegerField()),
                ('seat_taken', models.IntegerField()),
                ('service_adult_base_fare', models.FloatField(blank=True, null=True)),
                ('service_adult_tax', models.FloatField(blank=True, null=True)),
                ('service_child_base_fare', models.FloatField(blank=True, null=True)),
                ('service_child_tax', models.FloatField(blank=True, null=True)),
                ('service_infant_base_fare', models.FloatField(blank=True, null=True)),
                ('service_infant_tax', models.FloatField(blank=True, null=True)),
                ('ssi_seats_availability', models.IntegerField(blank=True, null=True)),
                ('fare_type', models.CharField(max_length=5)),
                ('chd_inf_basis_code', models.TextField()),
                ('actual_fare', models.FloatField()),
                ('fare_policy_details', models.TextField(blank=True, null=True)),
                ('single_bid_price', models.IntegerField(blank=True, null=True)),
                ('bid_price_seat_taken', models.IntegerField(blank=True, null=True)),
                ('child_seat_taken', models.IntegerField(blank=True, null=True)),
                ('group_booking_counter', models.IntegerField(blank=True, null=True)),
                ('gst_data', models.CharField(blank=True, max_length=60, null=True)),
                ('class_fare_type', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'fare_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FarePolicyDetails',
            fields=[
                ('fare_policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_policy_type', models.CharField(max_length=25)),
                ('fare_policy_details', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fare_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareSuggestedMatrix',
            fields=[
                ('fare_suggested_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_profile_id', models.IntegerField(blank=True, null=True)),
                ('days_to_departure', models.IntegerField(blank=True, null=True)),
                ('booking_capacity', models.FloatField(blank=True, null=True)),
                ('forecast_load_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fare_suggested_matrix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareSuggestedMatrixValue',
            fields=[
                ('fare_suggested_matrix_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_suggested_id', models.IntegerField(blank=True, null=True)),
                ('group_size', models.IntegerField(blank=True, null=True)),
                ('static_fare', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fare_suggested_matrix_value',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareTypeMappingDetails',
            fields=[
                ('fare_type_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_type_matrix_id', models.IntegerField(blank=True, null=True)),
                ('days_to_departure', models.IntegerField(blank=True, null=True)),
                ('booked_load_factor', models.IntegerField(blank=True, null=True)),
                ('forecast_load_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fare_type_mapping_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareTypeMaster',
            fields=[
                ('fare_type_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_type_name', models.CharField(blank=True, max_length=50, null=True)),
                ('fare_type_alias', models.CharField(blank=True, max_length=10, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'fare_type_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareTypeMatrix',
            fields=[
                ('fare_type_matrix_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_type_matrix_name', models.CharField(blank=True, max_length=100, null=True)),
                ('load_factor_type', models.CharField(blank=True, max_length=5, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'fare_type_matrix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareTypePolicyCriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(blank=True, max_length=100, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('criteria_logical_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fare_type_policy_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareTypePolicyDetails',
            fields=[
                ('fare_type_policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_type_policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField()),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'fare_type_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareTypePolicyMaster',
            fields=[
                ('fare_type_policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_type_policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('fare_type_matrix_id', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('active_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fare_type_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareTypeValueMapping',
            fields=[
                ('fare_type_value_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_type_mapping_id', models.IntegerField(blank=True, null=True)),
                ('group_size', models.IntegerField(blank=True, null=True)),
                ('fare_type_alias', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'fare_type_value_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FareValidityTypeDetails',
            fields=[
                ('fare_validity_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('fare_validity_type', models.CharField(blank=True, max_length=30, null=True)),
                ('fare_validity_values', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'fare_validity_type_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FieldTypeDetails',
            fields=[
                ('field_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('condition_id', models.IntegerField()),
                ('field_type_value', models.CharField(max_length=15, unique=True)),
                ('field_type_name', models.CharField(max_length=20)),
                ('field_type_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'field_type_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FileProcessDataDetails',
            fields=[
                ('file_process_data_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_info', models.JSONField(blank=True, null=True)),
                ('unique_string', models.TextField()),
                ('upload_request_type', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'file_process_data_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FileProcessDetails',
            fields=[
                ('file_process_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_upload_batch_id', models.IntegerField()),
                ('upload_file_type', models.CharField(max_length=15)),
                ('process_status', models.CharField(max_length=2)),
                ('request_info', models.TextField()),
                ('request_master_id', models.IntegerField()),
                ('remarks', models.TextField()),
                ('file_process_data_id', models.IntegerField()),
                ('sheet_row', models.IntegerField()),
            ],
            options={
                'db_table': 'file_process_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FileUploadBatchDetails',
            fields=[
                ('file_upload_batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('uploaded_date', models.DateTimeField(blank=True, null=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('process_type', models.CharField(blank=True, max_length=2, null=True)),
                ('file_status', models.CharField(blank=True, max_length=2, null=True)),
                ('uploaded_by', models.IntegerField(blank=True, null=True)),
                ('backend_file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('parent_file_id', models.IntegerField(blank=True, null=True)),
                ('requested_user_id', models.IntegerField(blank=True, null=True)),
                ('additional_details', models.TextField(blank=True, db_collation='utf8mb3_unicode_ci', null=True)),
            ],
            options={
                'db_table': 'file_upload_batch_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlightCabinMappingDetails',
            fields=[
                ('flight_cabin_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_approved_flight_id', models.IntegerField(blank=True, null=True)),
                ('via_flight_id', models.IntegerField(blank=True, null=True)),
                ('fare_basis_code', models.CharField(blank=True, max_length=20, null=True)),
                ('rule_number', models.CharField(blank=True, max_length=10, null=True)),
                ('fare_sequence', models.CharField(blank=True, max_length=50, null=True)),
                ('journey_sell_key', models.TextField(blank=True, null=True)),
                ('class_of_service', models.CharField(blank=True, max_length=5, null=True)),
                ('seat_availability', models.IntegerField(blank=True, null=True)),
                ('seat_taken', models.IntegerField(blank=True, null=True)),
                ('cabin_base_fare', models.FloatField(blank=True, null=True)),
                ('adult_base_fare', models.FloatField(blank=True, null=True)),
                ('adult_tax', models.FloatField(blank=True, null=True)),
                ('adult_total_fare', models.FloatField(blank=True, null=True)),
                ('child_base_fare', models.FloatField(blank=True, null=True)),
                ('child_tax', models.FloatField(blank=True, null=True)),
                ('child_total_fare', models.FloatField(blank=True, null=True)),
                ('infant_base_fare', models.FloatField(blank=True, null=True)),
                ('infant_tax', models.FloatField(blank=True, null=True)),
                ('infant_total_fare', models.FloatField(blank=True, null=True)),
                ('fare_type', models.CharField(max_length=5)),
                ('chd_inf_basis_code', models.TextField()),
                ('actual_fare', models.FloatField()),
                ('cabin_child_fare', models.FloatField(blank=True, null=True)),
                ('child_seat_taken', models.IntegerField(blank=True, null=True)),
                ('class_fare_type', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'flight_cabin_mapping_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlightDiscountMappingDetails',
            fields=[
                ('flight_discount_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_approved_flight_id', models.IntegerField(blank=True, null=True)),
                ('via_flight_id', models.IntegerField()),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('matrix_id', models.IntegerField(blank=True, null=True)),
                ('matrix_type', models.CharField(blank=True, max_length=5, null=True)),
                ('discount_fare', models.FloatField(blank=True, null=True)),
                ('days_to_departure', models.IntegerField(blank=True, null=True)),
                ('booked_load_factor', models.IntegerField(blank=True, null=True)),
                ('policy_currency_type', models.CharField(blank=True, max_length=5, null=True)),
                ('existing_adult_base_fare', models.FloatField(blank=True, null=True)),
                ('existing_adult_tax', models.FloatField(blank=True, null=True)),
                ('existing_adult_total_fare', models.FloatField(blank=True, null=True)),
                ('existing_child_base_fare', models.FloatField(blank=True, null=True)),
                ('existing_child_tax', models.FloatField(blank=True, null=True)),
                ('existing_child_total_fare', models.FloatField(blank=True, null=True)),
                ('load_factor_type', models.CharField(blank=True, max_length=5, null=True)),
                ('forecast_load_factor', models.IntegerField(blank=True, null=True)),
                ('child_discount_fare', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'flight_discount_mapping_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlightSalesPromoMapping',
            fields=[
                ('flight_sales_promo_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_approved_flight_id', models.IntegerField()),
                ('via_flight_id', models.IntegerField()),
                ('sales_promo_policy_id', models.IntegerField()),
                ('sales_promo_matrix_id', models.IntegerField()),
                ('sales_promo_matrix_type', models.CharField(max_length=5)),
                ('sales_promo_discount_percentage', models.FloatField()),
                ('sales_promo_discount_fare', models.FloatField()),
                ('sales_promo_currency_type', models.CharField(max_length=5)),
                ('original_base_fare', models.FloatField()),
            ],
            options={
                'db_table': 'flight_sales_promo_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FlightScheduleDetails',
            fields=[
                ('flight_schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('origin_airport_code', models.CharField(blank=True, max_length=3, null=True)),
                ('dest_airport_code', models.CharField(blank=True, max_length=3, null=True)),
                ('airlines_code', models.CharField(blank=True, max_length=7, null=True)),
                ('cabin', models.CharField(blank=True, max_length=5, null=True)),
                ('arrival_time', models.CharField(blank=True, max_length=5, null=True)),
                ('departure_time', models.CharField(blank=True, max_length=5, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=5, null=True)),
                ('flight_jounary_time', models.CharField(blank=True, max_length=5, null=True)),
                ('leg_count', models.IntegerField(blank=True, null=True)),
                ('routing', models.CharField(blank=True, max_length=11, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('series_weekdays', models.CharField(blank=True, max_length=13, null=True)),
                ('displacement_fare', models.IntegerField(blank=True, null=True)),
                ('booking_profile_fare', models.IntegerField(blank=True, null=True)),
                ('competetor_fare', models.IntegerField(blank=True, null=True)),
                ('base_fare', models.IntegerField(blank=True, null=True)),
                ('tax', models.IntegerField(blank=True, null=True)),
                ('currency_type', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'flight_schedule_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForecastBatchDetails',
            fields=[
                ('forecast_batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('data_count', models.IntegerField(blank=True, null=True)),
                ('inserted_data_count', models.IntegerField(blank=True, null=True)),
                ('file_uploaded_date', models.DateTimeField(blank=True, null=True)),
                ('batch_date', models.DateTimeField(blank=True, null=True)),
                ('batch_updated_date', models.DateTimeField(blank=True, null=True)),
                ('batch_file_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'forecast_batch_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForecastDataDetails',
            fields=[
                ('forecast_data_id', models.AutoField(primary_key=True, serialize=False)),
                ('forecast_batch_id', models.IntegerField(blank=True, null=True)),
                ('carrier', models.CharField(blank=True, max_length=5, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=20, null=True)),
                ('origin', models.CharField(blank=True, max_length=3, null=True)),
                ('destination', models.CharField(blank=True, max_length=3, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('depature_time', models.TimeField(blank=True, null=True)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('cabin', models.CharField(blank=True, max_length=2, null=True)),
                ('authorized_capacity', models.IntegerField(blank=True, null=True)),
                ('forecasted_demand', models.IntegerField(blank=True, null=True)),
                ('groups_booked', models.IntegerField(blank=True, null=True)),
                ('stand_deviation', models.FloatField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=5, null=True)),
                ('avg_fare', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('forecasted_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'forecast_data_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForecastDataDetailsTemp',
            fields=[
                ('forecast_data_id', models.AutoField(primary_key=True, serialize=False)),
                ('forecast_batch_id', models.IntegerField()),
                ('carrier', models.CharField(blank=True, max_length=5, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=20, null=True)),
                ('origin', models.CharField(blank=True, max_length=3, null=True)),
                ('destination', models.CharField(blank=True, max_length=3, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('depature_time', models.TimeField(blank=True, null=True)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('cabin', models.CharField(blank=True, max_length=2, null=True)),
                ('authorized_capacity', models.IntegerField(blank=True, null=True)),
                ('forecasted_demand', models.FloatField(blank=True, null=True)),
                ('groups_booked', models.FloatField(blank=True, null=True)),
                ('stand_deviation', models.FloatField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=5, null=True)),
                ('avg_fare', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('forecasted_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'forecast_data_details_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenderTitleDetails',
            fields=[
                ('gender_id', models.AutoField(primary_key=True, serialize=False)),
                ('gender_type', models.CharField(max_length=20)),
                ('gender_title_value', models.CharField(max_length=10)),
                ('display_value', models.CharField(blank=True, max_length=30, null=True)),
                ('view_status', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'gender_title_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GrmMenuDetails',
            fields=[
                ('menu_id', models.AutoField(primary_key=True, serialize=False)),
                ('menu_name', models.CharField(max_length=100)),
                ('menu_link', models.CharField(max_length=100)),
                ('menu_status', models.CharField(max_length=1)),
                ('created_date', models.DateField()),
                ('updated_date', models.DateField()),
                ('updated_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'grm_menu_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GrmMenuMappingDetails',
            fields=[
                ('menu_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.PositiveIntegerField()),
                ('child_id', models.PositiveIntegerField()),
                ('display_order', models.PositiveIntegerField()),
                ('display_status', models.CharField(max_length=1)),
                ('group_id', models.IntegerField()),
                ('created_date', models.DateField()),
                ('updated_date', models.DateField()),
                ('updated_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'grm_menu_mapping_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupAllocationProfileDetails',
            fields=[
                ('profile_id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_name', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_type', models.CharField(blank=True, max_length=2, null=True)),
                ('currency_type', models.CharField(blank=True, max_length=3, null=True)),
                ('load_factor_type', models.CharField(blank=True, max_length=5, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_allocation_profile_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupAllocationSuggestedMatrix',
            fields=[
                ('suggested_matrix_id', models.AutoField(primary_key=True, serialize=False)),
                ('profile_id', models.IntegerField()),
                ('group_start_pax', models.IntegerField()),
                ('group_end_pax', models.IntegerField()),
                ('group_pax_fare', models.FloatField()),
                ('days_to_departure', models.IntegerField()),
                ('booking_capacity', models.FloatField()),
                ('forecast_load_factor', models.IntegerField()),
            ],
            options={
                'db_table': 'group_allocation_suggested_matrix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupCategoryList',
            fields=[
                ('group_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_category_name', models.CharField(blank=True, max_length=30, null=True)),
                ('group_category_code', models.CharField(blank=True, max_length=2, null=True)),
                ('category_type', models.CharField(db_collation='utf8mb3_general_ci', max_length=1)),
                ('group_category_status', models.CharField(max_length=1)),
                ('display_order', models.IntegerField()),
            ],
            options={
                'db_table': 'group_category_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupchangeRequestDetails',
            fields=[
                ('groupchange_request_id', models.AutoField(primary_key=True, serialize=False)),
                ('groupchange_master_id', models.IntegerField(blank=True, null=True)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('series_request_id', models.IntegerField(blank=True, null=True)),
                ('parent_series_request_id', models.IntegerField(blank=True, null=True)),
                ('request_approved_flight_id', models.IntegerField()),
                ('current_no_of_adult', models.IntegerField(blank=True, null=True)),
                ('current_no_of_child', models.IntegerField(blank=True, null=True)),
                ('current_no_of_infant', models.IntegerField(blank=True, null=True)),
                ('current_no_of_foc', models.IntegerField(blank=True, null=True)),
                ('requested_no_of_adult', models.IntegerField(blank=True, null=True)),
                ('requested_no_of_child', models.IntegerField(blank=True, null=True)),
                ('requested_no_of_infant', models.IntegerField(blank=True, null=True)),
                ('requested_no_of_foc', models.IntegerField(blank=True, null=True)),
                ('approved_no_of_adult', models.IntegerField(blank=True, null=True)),
                ('approved_no_of_child', models.IntegerField(blank=True, null=True)),
                ('approved_no_of_infant', models.IntegerField(blank=True, null=True)),
                ('approved_no_of_foc', models.IntegerField(blank=True, null=True)),
                ('changed_no_of_adult', models.IntegerField(blank=True, null=True)),
                ('changed_no_of_child', models.IntegerField(blank=True, null=True)),
                ('changed_no_of_infant', models.IntegerField(blank=True, null=True)),
                ('changed_no_of_foc', models.IntegerField(blank=True, null=True)),
                ('infant_basefare', models.FloatField()),
                ('infant_tax', models.FloatField()),
                ('infant_taxbreakup', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'groupchange_request_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupchangeRequestMaster',
            fields=[
                ('groupchange_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('parent_request_master_id', models.IntegerField(blank=True, null=True)),
                ('resize_type_id', models.IntegerField()),
                ('trip_type', models.CharField(max_length=5)),
                ('pnr', models.CharField(max_length=11)),
                ('request_user_id', models.IntegerField(blank=True, null=True)),
                ('request_status', models.CharField(blank=True, max_length=1, null=True)),
                ('user_remarks', models.TextField(blank=True, null=True)),
                ('admin_remarks', models.TextField(blank=True, null=True)),
                ('requested_date', models.DateTimeField(blank=True, null=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('responded_user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'groupchange_request_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupContractDetails',
            fields=[
                ('group_contract_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_group_id', models.IntegerField()),
                ('contract_manager_master_id', models.IntegerField()),
                ('reference_id', models.IntegerField()),
                ('updated_contract', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'group_contract_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GroupDetails',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(blank=True, max_length=30, null=True)),
                ('group_alias_name', models.CharField(blank=True, max_length=3, null=True, unique=True)),
                ('corporate_type_id', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(max_length=1)),
                ('access_group_id', models.CharField(max_length=50)),
                ('default_module', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'group_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HistoryDetails',
            fields=[
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('child_id', models.IntegerField()),
                ('actioned_name', models.CharField(max_length=50)),
                ('actioned_details', models.TextField()),
                ('actioned_date', models.DateTimeField()),
                ('actioned_by', models.IntegerField()),
            ],
            options={
                'db_table': 'history_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HolidayList',
            fields=[
                ('holiday_list_id', models.AutoField(primary_key=True, serialize=False)),
                ('holiday_list_name', models.TextField(blank=True, null=True)),
                ('non_business_days_list', models.CharField(blank=True, max_length=30, null=True)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('city_id', models.IntegerField(blank=True, null=True)),
                ('country_year', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=1)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('enable_status', models.CharField(max_length=1)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('roll_on', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'holiday_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HolidayMappingList',
            fields=[
                ('holiday_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('holiday_list_id', models.IntegerField(blank=True, null=True)),
                ('holiday_date', models.DateField(blank=True, null=True)),
                ('holiday_desc', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(max_length=1)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'holiday_mapping_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HubAirportDetails',
            fields=[
                ('hub_airport_id', models.AutoField(primary_key=True, serialize=False)),
                ('airport_code', models.CharField(blank=True, max_length=3, null=True)),
                ('mapped_airport_code', models.CharField(blank=True, max_length=3, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hub_airport_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IpRestrictionDetails',
            fields=[
                ('restriction_id', models.AutoField(primary_key=True, serialize=False)),
                ('ip_address', models.CharField(blank=True, max_length=40, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=4, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ip_restriction_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IssueCategoryDetails',
            fields=[
                ('issue_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_category_name', models.CharField(blank=True, max_length=200, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('parent_category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'issue_category_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IssueCronEmailDetails',
            fields=[
                ('issue_cron_email_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_id', models.IntegerField()),
                ('issue_type', models.IntegerField()),
                ('email_subject', models.CharField(max_length=50)),
                ('sent_to', models.CharField(max_length=70)),
                ('sent_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'issue_cron_email_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IssueDetails',
            fields=[
                ('issue_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_category_id', models.IntegerField(blank=True, null=True)),
                ('issue_subcategory_id', models.IntegerField(blank=True, null=True)),
                ('severity_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('issue_status_id', models.IntegerField(blank=True, null=True)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('pnr', models.CharField(blank=True, max_length=25, null=True)),
                ('last_updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'issue_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IssueSeverityDetails',
            fields=[
                ('severity_id', models.AutoField(primary_key=True, serialize=False)),
                ('severity_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'issue_severity_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IssueStatusDetails',
            fields=[
                ('issue_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_status_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'issue_status_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IssueSubcategoryDetails',
            fields=[
                ('issue_subcategory_id', models.AutoField(primary_key=True, serialize=False)),
                ('issue_subcategory_name', models.CharField(blank=True, max_length=200, null=True)),
                ('issue_category_id', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('parent_category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'issue_subcategory_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoadFactorTypeDetails',
            fields=[
                ('load_factor_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('load_factor_type', models.CharField(blank=True, max_length=5, null=True)),
                ('load_factor_type_name', models.CharField(blank=True, max_length=100, null=True)),
                ('discount_status', models.CharField(blank=True, max_length=1, null=True)),
                ('static_fare_status', models.CharField(blank=True, max_length=1, null=True)),
                ('fare_type_status', models.CharField(blank=True, max_length=1, null=True)),
                ('surcharge_status', models.CharField(blank=True, max_length=1, null=True)),
                ('group_allocation_fare_matrix', models.CharField(max_length=1)),
                ('baggage_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'load_factor_type_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginVerification',
            fields=[
                ('login_verification_id', models.AutoField(primary_key=True, serialize=False)),
                ('ip_address', models.CharField(blank=True, max_length=100, null=True)),
                ('email_id', models.CharField(blank=True, max_length=100, null=True)),
                ('requested_date', models.DateTimeField(blank=True, null=True)),
                ('verification_status', models.CharField(blank=True, max_length=2, null=True)),
                ('additional_info', models.TextField()),
            ],
            options={
                'db_table': 'login_verification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ManipulateHistory',
            fields=[
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('module_id', models.IntegerField()),
                ('history_type', models.CharField(max_length=50)),
                ('history_type_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('ip_address', models.CharField(max_length=40)),
                ('date', models.DateTimeField()),
                ('history_value', models.TextField()),
                ('action_type', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'manipulate_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MealCodeDetails',
            fields=[
                ('meal_id', models.AutoField(primary_key=True, serialize=False)),
                ('meal_description', models.CharField(blank=True, max_length=250, null=True)),
                ('meal_code', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'meal_code_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuMAppDetails',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'menu_m_app_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuMComponents',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('component', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'menu_m_components',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuMLayouts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('layout', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'menu_m_layouts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuMMenu',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('menu_code', models.CharField(max_length=50)),
                ('path', models.CharField(max_length=200)),
                ('icon_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'menu_m_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuMRouteMapping',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('default', models.IntegerField()),
                ('display_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'menu_m_route_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuMRoutes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('path', models.CharField(max_length=200)),
                ('permission_id', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'menu_m_routes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuTMenuMapping',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('display_order', models.IntegerField()),
            ],
            options={
                'db_table': 'menu_t_menu_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageAttachment',
            fields=[
                ('attachment_id', models.AutoField(primary_key=True, serialize=False)),
                ('message_id', models.IntegerField(blank=True, null=True)),
                ('attachment_name', models.CharField(blank=True, max_length=200, null=True)),
                ('attachment_path', models.CharField(blank=True, max_length=200, null=True)),
                ('upload_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'message_attachment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MessageDetails',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('reference_id', models.IntegerField(blank=True, null=True)),
                ('support_type_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('status_id', models.IntegerField(blank=True, null=True)),
                ('message_subject', models.TextField(blank=True, db_collation='utf8mb3_general_ci', null=True)),
                ('message_content', models.TextField(blank=True, db_collation='utf8mb3_general_ci', null=True)),
                ('attachment', models.CharField(blank=True, max_length=1, null=True)),
                ('base_message_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('satisfaction_status', models.CharField(blank=True, max_length=1, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'message_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModuleDetails',
            fields=[
                ('module_id', models.AutoField(primary_key=True, serialize=False)),
                ('module_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'module_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModuleGroupMapping',
            fields=[
                ('module_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('module_id', models.IntegerField(blank=True, null=True)),
                ('template_id', models.IntegerField(blank=True, null=True)),
                ('display_order', models.IntegerField(blank=True, null=True)),
                ('display_status', models.CharField(blank=True, max_length=3, null=True)),
                ('display_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'module_group_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModuleGroupStdtplMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_id', models.IntegerField(blank=True, null=True)),
                ('std_tpl_id', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('class_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'module_group_stdtpl_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NegotiationCriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(blank=True, max_length=100, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('criteria_logical_id', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'negotiation_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NegotiationPolicyDetails',
            fields=[
                ('negotiation_policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('negotiation_policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'negotiation_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NegotiationPolicyMaster',
            fields=[
                ('negotiation_policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('negotiation_policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('negotiation_status', models.CharField(blank=True, max_length=1, null=True)),
                ('negotiation_limit', models.IntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'negotiation_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NegotiationRequestDetails',
            fields=[
                ('negotiation_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('negotiation_fileupload_id', models.IntegerField(blank=True, null=True)),
                ('request_master_id', models.IntegerField()),
                ('transaction_id', models.IntegerField()),
                ('pax_count', models.IntegerField(blank=True, null=True)),
                ('total_base_fare', models.FloatField(blank=True, null=True)),
                ('mr_rate', models.IntegerField(blank=True, null=True)),
                ('tandc_type', models.CharField(blank=True, max_length=3, null=True)),
                ('analyst_comments', models.TextField(blank=True, null=True)),
                ('fare_status', models.CharField(blank=True, max_length=1, null=True)),
                ('process_status', models.CharField(blank=True, max_length=1, null=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'negotiation_request_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteDetails',
            fields=[
                ('note_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('message', models.TextField()),
                ('posted_by', models.IntegerField(blank=True, null=True)),
                ('posted_on', models.DateTimeField()),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'note_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteReadStatusDetails',
            fields=[
                ('note_read_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('note_details_id', models.IntegerField()),
                ('note_user_mapping_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('read_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'note_read_status_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NoteUserMappingDetails',
            fields=[
                ('note_user_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('note_details_id', models.IntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'note_user_mapping_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OperatorMaster',
            fields=[
                ('operator_id', models.AutoField(primary_key=True, serialize=False)),
                ('operator_name', models.CharField(blank=True, max_length=15, null=True)),
                ('logical_value', models.CharField(blank=True, max_length=15, null=True)),
                ('operator_type', models.CharField(blank=True, max_length=3, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'operator_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OtherCodeDetails',
            fields=[
                ('other_id', models.AutoField(primary_key=True, serialize=False)),
                ('other_description', models.CharField(db_collation='latin1_swedish_ci', max_length=250)),
                ('other_code', models.CharField(db_collation='latin1_swedish_ci', max_length=250)),
            ],
            options={
                'db_table': 'other_code_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PackageDetails',
            fields=[
                ('package_id', models.AutoField(primary_key=True, serialize=False)),
                ('pnr_blocking_id', models.IntegerField()),
                ('adult', models.IntegerField()),
                ('child', models.IntegerField()),
                ('infant', models.IntegerField()),
                ('status', models.CharField(max_length=1)),
                ('parent_package_id', models.IntegerField()),
                ('ref_package_id', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('passenger_mapping', models.JSONField()),
            ],
            options={
                'db_table': 'package_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerDetails',
            fields=[
                ('passenger_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('request_approved_flight_id', models.IntegerField(blank=True, null=True)),
                ('series_request_id', models.IntegerField(blank=True, null=True)),
                ('name_number', models.CharField(blank=True, max_length=10, null=True)),
                ('pnr', models.CharField(blank=True, max_length=20, null=True)),
                ('title', models.CharField(blank=True, max_length=16, null=True)),
                ('first_name', models.TextField(blank=True, null=True)),
                ('last_name', models.TextField(blank=True, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=35, null=True)),
                ('age', models.CharField(blank=True, max_length=16, null=True)),
                ('pax_email_id', models.CharField(blank=True, max_length=32, null=True)),
                ('pax_mobile_number', models.CharField(blank=True, max_length=16, null=True)),
                ('pax_employee_code', models.CharField(blank=True, max_length=16, null=True)),
                ('pax_employee_id', models.CharField(blank=True, max_length=16, null=True)),
                ('passenger_type', models.CharField(blank=True, max_length=10, null=True)),
                ('id_proof', models.CharField(blank=True, max_length=16, null=True)),
                ('id_proof_number', models.CharField(blank=True, max_length=16, null=True)),
                ('sex', models.CharField(blank=True, max_length=16, null=True)),
                ('dob', models.CharField(blank=True, max_length=16, null=True)),
                ('citizenship', models.CharField(blank=True, max_length=16, null=True)),
                ('passport_no', models.CharField(blank=True, max_length=16, null=True)),
                ('date_of_issue', models.CharField(blank=True, max_length=256, null=True)),
                ('date_of_expiry', models.CharField(blank=True, max_length=256, null=True)),
                ('submitted_date', models.DateTimeField(blank=True, null=True)),
                ('traveller_number', models.CharField(blank=True, max_length=16, null=True)),
                ('frequent_flyer_number', models.CharField(blank=True, max_length=16, null=True)),
                ('passport_issued_place', models.CharField(blank=True, max_length=80, null=True)),
                ('meal_code', models.CharField(blank=True, max_length=6, null=True)),
                ('place_of_birth', models.CharField(blank=True, max_length=40, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('additional_details', models.TextField()),
                ('passenger_status', models.CharField(max_length=2)),
                ('foc_status', models.CharField(max_length=1)),
                ('parent_pax_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'passenger_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerMaster',
            fields=[
                ('passenger_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('pnr', models.CharField(max_length=10)),
                ('time_validity', models.DateTimeField(blank=True, null=True)),
                ('passenger_status', models.IntegerField(blank=True, null=True)),
                ('requested_date', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('passenger_remarks', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': 'passenger_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerPnrMapping',
            fields=[
                ('passenger_pnr_id', models.AutoField(primary_key=True, serialize=False)),
                ('pnr_id', models.IntegerField(blank=True, null=True)),
                ('passenger_id', models.IntegerField(blank=True, null=True)),
                ('ticketing_id', models.IntegerField()),
                ('submitted_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'passenger_pnr_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerTemplateConditionDetails',
            fields=[
                ('template_condition_id', models.AutoField(primary_key=True, serialize=False)),
                ('condition_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=20, null=True)),
                ('condition_type', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=20, null=True)),
                ('display_status', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=5, null=True)),
                ('condition_logical_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=20, null=True)),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'passenger_template_condition_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerTemplateConditionMapping',
            fields=[
                ('passenger_template_condition_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('passenger_template_field_mapping_id', models.IntegerField()),
                ('template_condition_id', models.IntegerField()),
                ('template_condition_value', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=20, null=True)),
            ],
            options={
                'db_table': 'passenger_template_condition_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerTemplateCriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=100, null=True)),
                ('criteria_type', models.CharField(db_collation='utf8mb3_general_ci', max_length=3)),
                ('display_status', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=1, null=True)),
                ('criteria_logical_id', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'passenger_template_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerTemplateDetails',
            fields=[
                ('passenger_template_id', models.AutoField(primary_key=True, serialize=False)),
                ('passenger_template_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=5, null=True)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'passenger_template_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerTemplateFieldConditionMapping',
            fields=[
                ('passenger_template_field_condition_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('template_field_id', models.IntegerField()),
                ('template_condition_id', models.IntegerField()),
            ],
            options={
                'db_table': 'passenger_template_field_condition_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerTemplateFieldDetails',
            fields=[
                ('template_field_id', models.AutoField(primary_key=True, serialize=False)),
                ('template_field_name', models.CharField(blank=True, max_length=25, null=True)),
                ('template_field_type', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=10, null=True)),
                ('display_status', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=5, null=True)),
                ('template_logical_name', models.CharField(blank=True, max_length=25, null=True)),
                ('created_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'passenger_template_field_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerTemplateFieldMapping',
            fields=[
                ('passenger_template_field_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('passenger_template_id', models.IntegerField()),
                ('template_field_id', models.IntegerField()),
            ],
            options={
                'db_table': 'passenger_template_field_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerTemplatePolicyDetails',
            fields=[
                ('policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=200, null=True)),
            ],
            options={
                'db_table': 'passenger_template_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PassengerTemplatePolicyMaster',
            fields=[
                ('policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=100, null=True)),
                ('passenger_template_id', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(max_length=1)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField()),
                ('created_by', models.IntegerField()),
            ],
            options={
                'db_table': 'passenger_template_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaxTypeDetails',
            fields=[
                ('pax_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('pax_type_value', models.CharField(max_length=10)),
                ('display_value', models.CharField(blank=True, max_length=50, null=True)),
                ('view_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'pax_type_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentAdditionalChargeDetails',
            fields=[
                ('payment_charge_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('ssr_list_id', models.IntegerField()),
                ('ssr_master_id', models.IntegerField(blank=True, null=True)),
                ('pnr_blocking_id', models.IntegerField()),
                ('additional_amount', models.FloatField()),
                ('pnr_payment_id', models.IntegerField(blank=True, null=True)),
                ('paid_status', models.CharField(blank=True, max_length=20, null=True)),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('modified_details', models.TextField(blank=True, null=True)),
                ('series_group_id', models.IntegerField(blank=True, null=True)),
                ('ssr_status', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'payment_additional_charge_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentDetails',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('response_code', models.IntegerField(blank=True, null=True)),
                ('response_message', models.CharField(blank=True, max_length=64, null=True)),
                ('transaction_type_id', models.IntegerField(blank=True, null=True)),
                ('request_source', models.CharField(blank=True, max_length=25, null=True)),
                ('request_source_id', models.IntegerField(blank=True, null=True)),
                ('payment_amount', models.FloatField(blank=True, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=3, null=True)),
                ('payment_mode', models.CharField(blank=True, max_length=25, null=True)),
                ('paid_by', models.IntegerField(blank=True, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentFailedHistory',
            fields=[
                ('payment_failed_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_master_id', models.IntegerField(blank=True, null=True)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('pnr', models.CharField(blank=True, max_length=10, null=True)),
                ('amount_to_pay', models.FloatField(blank=True, null=True)),
                ('paid_by', models.IntegerField(blank=True, null=True)),
                ('card_type', models.CharField(blank=True, max_length=6, null=True)),
                ('card_number', models.CharField(blank=True, max_length=200, null=True)),
                ('cvv_number', models.CharField(blank=True, max_length=50, null=True)),
                ('card_name_holder', models.CharField(blank=True, max_length=150, null=True)),
                ('expirydate_year', models.CharField(blank=True, max_length=25, null=True)),
                ('expirydate_month', models.CharField(blank=True, max_length=25, null=True)),
                ('pnr_status', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=20, null=True)),
                ('card_authorization', models.CharField(blank=True, max_length=20, null=True)),
                ('error', models.CharField(blank=True, max_length=300, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_failed_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentMaster',
            fields=[
                ('payment_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('payment_percentage', models.FloatField(blank=True, null=True)),
                ('percentage_amount', models.FloatField(blank=True, null=True)),
                ('exchange_rate', models.FloatField()),
                ('payment_validity_date', models.DateTimeField(blank=True, null=True)),
                ('payment_requested_date', models.DateTimeField(blank=True, null=True)),
                ('payment_remarks', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=300, null=True)),
                ('payment_status', models.IntegerField(blank=True, null=True)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentPendingHistory',
            fields=[
                ('payment_pending_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('payment_master_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('pnr', models.CharField(blank=True, max_length=10, null=True)),
                ('payment_requested_amount', models.FloatField(blank=True, null=True)),
                ('card_type', models.CharField(blank=True, max_length=10, null=True)),
                ('card_last_digit', models.CharField(blank=True, max_length=6, null=True)),
                ('corn_count', models.IntegerField(blank=True, null=True)),
                ('paid_by', models.IntegerField(blank=True, null=True)),
                ('payment_status', models.CharField(blank=True, max_length=15, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('last_updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment_pending_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentRequestDetails',
            fields=[
                ('payment_request_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_id', models.IntegerField()),
                ('payment_validity', models.IntegerField()),
                ('payment_validity_type', models.IntegerField()),
                ('payment_expiry_type', models.IntegerField()),
                ('payment_expiry_date', models.DateTimeField()),
                ('payment_percentage', models.FloatField()),
                ('paid_status', models.CharField(max_length=20)),
                ('payment_absolute_amount', models.FloatField()),
            ],
            options={
                'db_table': 'payment_request_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentRequestDetailsHistory',
            fields=[
                ('payment_request_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_request_id', models.IntegerField(blank=True, null=True)),
                ('transaction_id', models.IntegerField()),
                ('payment_validity', models.IntegerField()),
                ('payment_validity_type', models.IntegerField()),
                ('payment_expiry_type', models.IntegerField()),
                ('payment_expiry_date', models.DateTimeField()),
                ('payment_percentage', models.FloatField()),
                ('paid_status', models.CharField(max_length=20)),
                ('payment_absolute_amount', models.FloatField()),
            ],
            options={
                'db_table': 'payment_request_details_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentTransactionDetails',
            fields=[
                ('payment_transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_master_id', models.IntegerField(blank=True, null=True)),
                ('payment_type_id', models.IntegerField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_name', models.IntegerField(blank=True, null=True)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('payment_received_by', models.IntegerField(blank=True, null=True)),
                ('payment_transaction_date', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'payment_transaction_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentTypeDetails',
            fields=[
                ('payment_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_type_code', models.CharField(blank=True, max_length=10, null=True)),
                ('payment_type_description', models.CharField(blank=True, max_length=25, null=True)),
                ('parent_payment_type_id', models.IntegerField()),
                ('display_status', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'payment_type_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PenalityTypeMaster',
            fields=[
                ('penality_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('penality_type_code', models.CharField(blank=True, max_length=5, null=True)),
                ('penality_type_name', models.CharField(blank=True, max_length=20, null=True)),
                ('category', models.CharField(blank=True, max_length=40, null=True)),
                ('config', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'penality_type_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PnrBlockingDetails',
            fields=[
                ('pnr_blocking_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('request_approved_flight_id', models.IntegerField()),
                ('via_flight_id', models.IntegerField()),
                ('pnr', models.CharField(max_length=10)),
                ('no_of_adult', models.IntegerField()),
                ('no_of_child', models.IntegerField()),
                ('no_of_infant', models.IntegerField()),
                ('no_of_foc', models.IntegerField()),
                ('pnr_amount', models.FloatField()),
                ('price_quote_at', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=30, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pnr_blocking_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PnrDetails',
            fields=[
                ('pnr_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('series_request_id', models.IntegerField(blank=True, null=True)),
                ('pnr_number', models.CharField(blank=True, max_length=50, null=True)),
                ('pnr_status', models.IntegerField(blank=True, null=True)),
                ('ticket_type', models.CharField(max_length=10)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pnr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PnrPaymentDetails',
            fields=[
                ('pnr_payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_master_id', models.IntegerField()),
                ('pnr', models.CharField(max_length=10)),
                ('paid_amount', models.FloatField()),
                ('paid_date', models.DateTimeField()),
                ('group_pax_paid', models.CharField(blank=True, max_length=100, null=True)),
                ('group_pax_percent', models.FloatField(blank=True, null=True)),
                ('payment_status', models.CharField(max_length=20)),
                ('payment_service_id', models.CharField(max_length=100)),
                ('topup_id', models.IntegerField(blank=True, null=True)),
                ('pnr_payment_validity_date', models.DateTimeField(blank=True, null=True)),
                ('request_timeline_id', models.IntegerField(blank=True, null=True)),
                ('pnr_percentage_amount', models.FloatField(blank=True, null=True)),
                ('convinence_charge', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pnr_payment_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PnrPaymentTransactions',
            fields=[
                ('pnr_payment_transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('pnr_payment_id', models.IntegerField(blank=True, null=True)),
                ('payment_transaction_id', models.IntegerField(blank=True, null=True)),
                ('currency', models.CharField(blank=True, max_length=3, null=True)),
                ('exchange_rate', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('original_requested_amount', models.FloatField()),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'pnr_payment_transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PnrRemainderMailDetails',
            fields=[
                ('pnr_remainder_mail_id', models.AutoField(primary_key=True, serialize=False)),
                ('pnr', models.CharField(blank=True, max_length=7, null=True)),
                ('pnr_action', models.CharField(blank=True, max_length=10, null=True)),
                ('to_mail_id', models.CharField(blank=True, max_length=400, null=True)),
                ('cc_mail_id', models.CharField(blank=True, max_length=400, null=True)),
                ('from_queue_no', models.IntegerField()),
                ('to_queue_no', models.IntegerField()),
                ('user_remark', models.CharField(blank=True, max_length=500, null=True)),
                ('pnr_remarks', models.CharField(blank=True, max_length=200, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('action_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('action_by', models.IntegerField(blank=True, null=True)),
                ('pos', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'pnr_remainder_mail_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PolicyDetails',
            fields=[
                ('policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField()),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PolicyGroupMapping',
            fields=[
                ('policy_group_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('series_group_id', models.IntegerField(blank=True, null=True)),
                ('request_approved_flight_id', models.IntegerField(blank=True, null=True)),
                ('via_flight_id', models.IntegerField(blank=True, null=True)),
                ('request_master_history_id', models.IntegerField(blank=True, null=True)),
                ('policy_mapping_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'policy_group_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PolicyMapping',
            fields=[
                ('policy_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_type_id', models.IntegerField(blank=True, null=True)),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('matrix_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'policy_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PolicyMaster',
            fields=[
                ('policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('discount_matrix_id', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('active_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PolicyTypeDetails',
            fields=[
                ('policy_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_type_code', models.CharField(blank=True, max_length=5, null=True)),
                ('policy_type_name', models.CharField(blank=True, max_length=100, null=True)),
                ('policy_type_value', models.CharField(blank=True, max_length=100, null=True)),
                ('matrix_table_name', models.CharField(blank=True, max_length=100, null=True)),
                ('policy_type_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'policy_type_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PosDetails',
            fields=[
                ('pos_id', models.AutoField(primary_key=True, serialize=False)),
                ('pos_code', models.CharField(blank=True, max_length=8, null=True)),
                ('pos_city', models.CharField(blank=True, max_length=40, null=True)),
                ('pos_country', models.CharField(blank=True, max_length=2, null=True)),
                ('pos_region', models.CharField(blank=True, max_length=40, null=True)),
                ('pos_office_id', models.CharField(blank=True, max_length=20, null=True)),
                ('station_number', models.CharField(blank=True, max_length=20, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'pos_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PosUserMapping',
            fields=[
                ('pos_user_id', models.AutoField(primary_key=True, serialize=False)),
                ('pos_code', models.CharField(blank=True, max_length=8, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('active_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'pos_user_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDetails',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('booking_profile_id', models.IntegerField(blank=True, null=True)),
                ('airline_code', models.CharField(blank=True, max_length=2, null=True)),
                ('origin_airport_code', models.CharField(blank=True, max_length=3, null=True)),
                ('dest_airport_code', models.CharField(blank=True, max_length=3, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=8, null=True)),
                ('time_departure', models.CharField(blank=True, max_length=5, null=True)),
                ('time_arrival', models.CharField(blank=True, max_length=5, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('fare', models.FloatField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('day_preference', models.CharField(blank=True, max_length=20, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProofDetails',
            fields=[
                ('proof_id', models.AutoField(primary_key=True, serialize=False)),
                ('proof_type', models.CharField(blank=True, max_length=40, null=True)),
                ('adult_status', models.CharField(blank=True, max_length=2, null=True)),
                ('child_status', models.CharField(blank=True, max_length=2, null=True)),
                ('infant_status', models.CharField(blank=True, max_length=2, null=True)),
                ('proof_code', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'proof_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PwdUpgrade',
            fields=[
                ('pwd_upgrade_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('old_pwd', models.CharField(max_length=40)),
                ('new_pwd', models.CharField(max_length=90)),
                ('updated_on', models.DateTimeField()),
            ],
            options={
                'db_table': 'pwd_upgrade',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueueBatchDetails',
            fields=[
                ('queue_batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('total_pnr_count', models.IntegerField(blank=True, null=True)),
                ('processed_pnr_count', models.IntegerField(blank=True, null=True)),
                ('batch_date', models.DateTimeField(blank=True, null=True)),
                ('batch_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'queue_batch_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueuePnrDetails',
            fields=[
                ('queue_pnr_id', models.AutoField(primary_key=True, serialize=False)),
                ('queue_batch_id', models.IntegerField(blank=True, null=True)),
                ('pnr', models.CharField(blank=True, max_length=10, null=True)),
                ('locator', models.CharField(blank=True, max_length=5, null=True)),
                ('placed_by', models.CharField(blank=True, max_length=5, null=True)),
                ('pnr_created_datetime', models.DateTimeField(blank=True, null=True)),
                ('pnr_status', models.CharField(blank=True, max_length=1, null=True)),
                ('pnr_remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('request_status', models.IntegerField(blank=True, null=True)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('queue_no', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'queue_pnr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegistrationPaymentDetails',
            fields=[
                ('registration_payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.FloatField()),
                ('payment_type_id', models.IntegerField()),
                ('pnr_blocking_id', models.IntegerField()),
                ('emd_id', models.IntegerField()),
                ('paid_on', models.DateTimeField()),
                ('approved_by', models.IntegerField()),
                ('approved_on', models.DateTimeField()),
                ('other', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'registration_payment_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RemarksDetails',
            fields=[
                ('remarks_id', models.AutoField(primary_key=True, serialize=False)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('remarks_source', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'remarks_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportNavigation',
            fields=[
                ('menu_id', models.AutoField(primary_key=True, serialize=False)),
                ('menu_type', models.CharField(max_length=30)),
                ('route', models.CharField(blank=True, max_length=50, null=True)),
                ('display_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'report_navigation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestApprovedFareDetails',
            fields=[
                ('request_approved_fare_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_approved_flight_id', models.IntegerField(blank=True, null=True)),
                ('request_approved_flight_history_id', models.IntegerField(blank=True, null=True)),
                ('approved_fare', models.CharField(max_length=60)),
                ('approved_tax', models.TextField(blank=True, null=True)),
                ('approved_discount', models.CharField(blank=True, max_length=120, null=True)),
                ('approved_fare_details', models.TextField(blank=True, null=True)),
                ('approved_policy_details', models.TextField(blank=True, null=True)),
                ('via_flight_details', models.TextField(blank=True, null=True)),
                ('fare_filter_method', models.CharField(blank=True, max_length=5, null=True)),
                ('request_timeline_id', models.CharField(max_length=60)),
                ('cancel_policy_id', models.CharField(max_length=60)),
                ('fare_accepted_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'request_approved_fare_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestApprovedFlightDetails',
            fields=[
                ('request_approved_flight_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('transaction_master_id', models.IntegerField(blank=True, null=True)),
                ('request_id', models.IntegerField()),
                ('request_details_history_id', models.IntegerField(blank=True, null=True)),
                ('series_request_id', models.IntegerField()),
                ('series_request_history_id', models.IntegerField(blank=True, null=True)),
                ('request_option_id', models.IntegerField(blank=True, null=True)),
                ('airline_code', models.CharField(blank=True, max_length=5, null=True)),
                ('flight_code', models.CharField(blank=True, max_length=10, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=20, null=True)),
                ('source', models.CharField(blank=True, max_length=5, null=True)),
                ('destination', models.CharField(blank=True, max_length=5, null=True)),
                ('departure_date', models.DateField()),
                ('arrival_date', models.DateField()),
                ('dep_time', models.CharField(max_length=6)),
                ('arr_time', models.CharField(max_length=6)),
                ('journey_time', models.CharField(max_length=6)),
                ('fare_filter_method', models.CharField(blank=True, max_length=30, null=True)),
                ('no_of_adult', models.IntegerField(blank=True, null=True)),
                ('no_of_child', models.IntegerField(blank=True, null=True)),
                ('no_of_infant', models.IntegerField(blank=True, null=True)),
                ('displacement_cost', models.FloatField()),
                ('base_fare', models.FloatField()),
                ('tax', models.FloatField()),
                ('fare_passenger', models.FloatField()),
                ('tax_breakup', models.CharField(blank=True, max_length=300, null=True)),
                ('child_base_fare', models.FloatField()),
                ('child_tax', models.FloatField()),
                ('child_tax_breakup', models.CharField(blank=True, max_length=300, null=True)),
                ('infant_base_fare', models.FloatField()),
                ('infant_tax', models.FloatField()),
                ('infant_tax_breakup', models.CharField(blank=True, max_length=300, null=True)),
                ('baggauge_fare', models.FloatField(blank=True, null=True)),
                ('meals_fare', models.FloatField(blank=True, null=True)),
                ('baggage_code', models.CharField(max_length=5)),
                ('meals_code', models.CharField(blank=True, max_length=6, null=True)),
                ('stops', models.IntegerField(blank=True, null=True)),
                ('capacity', models.IntegerField()),
                ('sold', models.IntegerField()),
                ('seat_availability', models.IntegerField()),
                ('discount_fare', models.FloatField(blank=True, null=True)),
                ('child_discount_fare', models.FloatField(blank=True, null=True)),
                ('sales_promo_discount_fare', models.FloatField()),
                ('adjusted_amount', models.FloatField(blank=True, null=True)),
                ('accepted_flight_status', models.CharField(max_length=1)),
                ('displacement_fare_remarks', models.TextField(blank=True, null=True)),
                ('surcharge', models.FloatField(blank=True, null=True)),
                ('ancillary_fare', models.TextField(blank=True, null=True)),
                ('free_cost_count', models.IntegerField()),
                ('foc_base_fare', models.FloatField()),
                ('foc_tax', models.FloatField()),
                ('foc_tax_breakup', models.CharField(blank=True, max_length=300, null=True)),
                ('lfid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'request_approved_flight_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestApprovedFlightHistory',
            fields=[
                ('request_approved_flight_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('transaction_history_id', models.IntegerField(blank=True, null=True)),
                ('request_id', models.IntegerField()),
                ('request_details_history_id', models.IntegerField(blank=True, null=True)),
                ('series_request_history_id', models.IntegerField(blank=True, null=True)),
                ('series_request_id', models.IntegerField()),
                ('request_option_id', models.IntegerField(blank=True, null=True)),
                ('airline_code', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=5, null=True)),
                ('flight_code', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=10, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=20, null=True)),
                ('source', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=5, null=True)),
                ('destination', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=5, null=True)),
                ('departure_date', models.DateField()),
                ('arrival_date', models.DateField()),
                ('dep_time', models.CharField(db_collation='latin1_swedish_ci', max_length=6)),
                ('arr_time', models.CharField(db_collation='latin1_swedish_ci', max_length=6)),
                ('journey_time', models.CharField(db_collation='latin1_swedish_ci', max_length=6)),
                ('fare_filter_method', models.CharField(blank=True, max_length=30, null=True)),
                ('no_of_adult', models.IntegerField(blank=True, null=True)),
                ('no_of_child', models.IntegerField(blank=True, null=True)),
                ('no_of_infant', models.IntegerField(blank=True, null=True)),
                ('displacement_cost', models.FloatField()),
                ('booking_profile_fare', models.FloatField()),
                ('competetor_fare', models.FloatField()),
                ('base_fare', models.FloatField()),
                ('tax', models.FloatField()),
                ('fare_passenger', models.FloatField()),
                ('tax_breakup', models.CharField(max_length=150)),
                ('child_base_fare', models.FloatField()),
                ('child_tax', models.FloatField()),
                ('child_tax_breakup', models.CharField(max_length=150)),
                ('infant_base_fare', models.FloatField()),
                ('infant_tax', models.FloatField()),
                ('infant_tax_breakup', models.CharField(max_length=150)),
                ('baggauge_fare', models.FloatField(blank=True, null=True)),
                ('meals_fare', models.FloatField(blank=True, null=True)),
                ('tiger_connect_fare', models.FloatField()),
                ('baggage_code', models.CharField(max_length=5)),
                ('fare_type', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=3, null=True)),
                ('fare_class', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=3, null=True)),
                ('fare_basis_code', models.CharField(db_collation='latin1_swedish_ci', max_length=10)),
                ('rule_number', models.CharField(db_collation='latin1_swedish_ci', max_length=10)),
                ('fare_sequence', models.CharField(db_collation='latin1_swedish_ci', max_length=5)),
                ('fare_application_type', models.CharField(db_collation='latin1_swedish_ci', max_length=15)),
                ('stops', models.IntegerField(blank=True, null=True)),
                ('capacity', models.IntegerField()),
                ('sold', models.IntegerField()),
                ('seat_availability', models.IntegerField()),
                ('dep_terminal', models.CharField(db_collation='latin1_swedish_ci', max_length=100)),
                ('arr_terminal', models.CharField(db_collation='latin1_swedish_ci', max_length=100)),
                ('image_location', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=50, null=True)),
                ('discount_fare', models.FloatField(blank=True, null=True)),
                ('child_discount_fare', models.FloatField(blank=True, null=True)),
                ('sales_promo_discount_fare', models.FloatField()),
                ('adjusted_amount', models.FloatField(blank=True, null=True)),
                ('accepted_flight_status', models.CharField(max_length=1)),
                ('displacement_fare_remarks', models.TextField(blank=True, null=True)),
                ('surcharge', models.FloatField(blank=True, null=True)),
                ('ancillary_fare', models.TextField(blank=True, null=True)),
                ('free_cost_count', models.IntegerField()),
                ('foc_base_fare', models.FloatField()),
                ('foc_tax', models.FloatField()),
                ('foc_tax_breakup', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'db_table': 'request_approved_flight_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestBatchDetails',
            fields=[
                ('request_batch_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('backend_file_name', models.CharField(blank=True, max_length=200, null=True)),
                ('total_request_count', models.IntegerField(blank=True, null=True)),
                ('processed_request_count', models.IntegerField(blank=True, null=True)),
                ('uploaded_date', models.DateTimeField(blank=True, null=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('file_status', models.CharField(blank=True, max_length=1, null=True)),
                ('uploaded_by', models.IntegerField()),
            ],
            options={
                'db_table': 'request_batch_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestCriteriaDetails',
            fields=[
                ('request_criteria_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_criteria_master_id', models.IntegerField()),
                ('request_criteria_field_id', models.IntegerField()),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('criteria_value', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=200, null=True)),
            ],
            options={
                'db_table': 'request_criteria_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestCriteriaFieldDetails',
            fields=[
                ('request_criteria_field_id', models.AutoField(primary_key=True, serialize=False)),
                ('field_parent_id', models.IntegerField()),
                ('request_criteria_field_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=100, null=True)),
                ('request_criteria_field_type', models.CharField(db_collation='utf8mb3_general_ci', max_length=3)),
                ('display_status', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=1, null=True)),
                ('ssr_display_status', models.CharField(max_length=1)),
                ('request_criteria_field_logical_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'request_criteria_field_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestCriteriaMaster',
            fields=[
                ('request_criteria_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_criteria_master_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=50, null=True)),
                ('status', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=5, null=True)),
                ('created_by', models.IntegerField()),
                ('updated_by', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField()),
                ('updated_date', models.DateTimeField()),
                ('policy_type', models.CharField(blank=True, max_length=20, null=True)),
                ('matrix_group_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'request_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestCriteriaPassengercountDetails',
            fields=[
                ('criteria_passenger_count_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_criteria_master_id', models.IntegerField()),
                ('min_passenger', models.IntegerField()),
                ('max_passenger', models.IntegerField()),
                ('min_infant', models.IntegerField()),
                ('max_infant', models.IntegerField()),
                ('min_stops', models.IntegerField(blank=True, null=True)),
                ('foc', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'request_criteria_passengercount_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestDetails',
            fields=[
                ('request_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('origin_airport_code', models.CharField(blank=True, max_length=5, null=True)),
                ('dest_airport_code', models.CharField(blank=True, max_length=5, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=200, null=True)),
                ('cabin', models.CharField(blank=True, max_length=20, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('start_time', models.CharField(blank=True, max_length=5, null=True)),
                ('end_time', models.CharField(blank=True, max_length=5, null=True)),
                ('series_weekdays', models.CharField(blank=True, max_length=50, null=True)),
                ('baggage_allowance', models.CharField(blank=True, max_length=250, null=True)),
                ('ancillary', models.CharField(blank=True, max_length=50, null=True)),
                ('meals_code', models.CharField(blank=True, max_length=6, null=True)),
                ('pnr', models.CharField(blank=True, max_length=25, null=True)),
                ('trip_name', models.IntegerField()),
                ('trip_type', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'request_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestDetailsHistory',
            fields=[
                ('request_details_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_history_id', models.IntegerField()),
                ('request_master_id', models.IntegerField()),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('origin_airport_code', models.CharField(blank=True, max_length=5, null=True)),
                ('dest_airport_code', models.CharField(blank=True, max_length=5, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=200, null=True)),
                ('baggage_allowance', models.CharField(blank=True, max_length=250, null=True)),
                ('ancillary', models.CharField(blank=True, max_length=5, null=True)),
                ('meals_code', models.CharField(max_length=5)),
                ('cabin', models.CharField(blank=True, max_length=20, null=True)),
                ('trip_type', models.CharField(max_length=1)),
                ('trip_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'request_details_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestGroupDetails',
            fields=[
                ('request_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('transaction_master_id', models.IntegerField(blank=True, null=True)),
                ('request_master_history_id', models.IntegerField()),
                ('series_group_id', models.IntegerField(blank=True, null=True)),
                ('materialization', models.CharField(blank=True, max_length=3, null=True)),
                ('policy', models.CharField(blank=True, max_length=2, null=True)),
                ('response_fare', models.CharField(blank=True, max_length=30, null=True)),
                ('theshold_policy_id', models.CharField(blank=True, max_length=30, null=True)),
                ('threshold_fare', models.CharField(blank=True, max_length=30, null=True)),
                ('remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('group_status', models.IntegerField(blank=True, null=True)),
                ('group_contract', models.TextField()),
            ],
            options={
                'db_table': 'request_group_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestMaster',
            fields=[
                ('request_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('request_type', models.CharField(blank=True, max_length=20, null=True)),
                ('request_type_id', models.IntegerField()),
                ('trip_type', models.CharField(blank=True, max_length=1, null=True)),
                ('series_type', models.CharField(blank=True, max_length=2, null=True)),
                ('user_currency', models.CharField(max_length=3)),
                ('request_fare', models.FloatField()),
                ('exchange_rate', models.FloatField()),
                ('requested_date', models.DateTimeField(blank=True, null=True)),
                ('number_of_passenger', models.IntegerField(blank=True, null=True)),
                ('number_of_adult', models.IntegerField(blank=True, null=True)),
                ('number_of_child', models.IntegerField(blank=True, null=True)),
                ('number_of_infant', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, db_collation='utf8mb3_general_ci', null=True)),
                ('fare_acceptance_transaction_id', models.IntegerField(blank=True, null=True)),
                ('request_source', models.CharField(blank=True, max_length=100, null=True)),
                ('requested_corporate', models.CharField(blank=True, max_length=100, null=True)),
                ('opened_by', models.IntegerField()),
                ('opened_time', models.DateTimeField()),
                ('view_status', models.CharField(max_length=10)),
                ('request_raised_by', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('auto_pilot_policy_id', models.IntegerField(blank=True, null=True)),
                ('auto_pilot_status', models.CharField(blank=True, max_length=10, null=True)),
                ('reference_request_master_id', models.IntegerField()),
                ('quote_type', models.CharField(blank=True, max_length=2, null=True)),
                ('request_group_name', models.CharField(max_length=100)),
                ('group_category_id', models.IntegerField(blank=True, null=True)),
                ('flexible_on_dates', models.CharField(blank=True, max_length=1, null=True)),
                ('pnr_ignore_status', models.CharField(blank=True, max_length=1, null=True)),
                ('queue_no', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'request_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestMasterHistory',
            fields=[
                ('request_master_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('trip_type', models.CharField(blank=True, max_length=1, null=True)),
                ('user_currency', models.CharField(max_length=3)),
                ('request_fare', models.IntegerField(blank=True, null=True)),
                ('exchange_rate', models.FloatField()),
                ('requested_date', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=300, null=True)),
                ('request_raised_by', models.IntegerField(blank=True, null=True)),
                ('cabin', models.CharField(blank=True, max_length=20, null=True)),
                ('series_weekdays', models.CharField(blank=True, max_length=50, null=True)),
                ('group_category_id', models.IntegerField(blank=True, null=True)),
                ('flexible_on_dates', models.CharField(max_length=1)),
                ('modify_status', models.IntegerField(blank=True, null=True)),
                ('actual_request_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'request_master_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestOpenHistory',
            fields=[
                ('request_open_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('opened_by', models.IntegerField()),
                ('opened_time', models.DateTimeField()),
                ('view_status', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'request_open_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestPolicyCriteriaMaster',
            fields=[
                ('request_policy_criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_policy_criteria_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=100, null=True)),
                ('request_policy_criteria_type', models.CharField(db_collation='utf8mb3_general_ci', max_length=3)),
                ('display_status', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=1, null=True)),
                ('request_policy_criteria_logical_id', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'request_policy_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestPolicyDetails',
            fields=[
                ('request_policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_policy_id', models.IntegerField(blank=True, null=True)),
                ('request_criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=200, null=True)),
            ],
            options={
                'db_table': 'request_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestPolicyMaster',
            fields=[
                ('request_policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_policy_name', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=100, null=True)),
                ('request_criteria_id', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(max_length=1)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('policy_group_id', models.IntegerField(blank=True, null=True)),
                ('policy_string', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'request_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestProbabilityDetails',
            fields=[
                ('request_probability_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('ml_category', models.CharField(max_length=2)),
                ('ml_response', models.TextField()),
                ('ml_value', models.FloatField()),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'request_probability_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestProbabilityMaster',
            fields=[
                ('request_probability_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('flt_num', models.CharField(max_length=10)),
                ('value', models.IntegerField()),
                ('response_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'request_probability_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestQuoteDetails',
            fields=[
                ('request_quote_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('series_request_id', models.IntegerField(blank=True, null=True)),
                ('series_request_history_id', models.IntegerField(blank=True, null=True)),
                ('flight_searched_date', models.DateField(blank=True, null=True)),
                ('batch_start_date', models.DateField(blank=True, null=True)),
                ('quote_type', models.CharField(blank=True, max_length=2, null=True)),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
                ('modify_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'request_quote_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestTimelineDetails',
            fields=[
                ('request_timeline_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_id', models.IntegerField()),
                ('pnr_blocking_id', models.IntegerField()),
                ('series_group_id', models.IntegerField()),
                ('policy_history_id', models.IntegerField(blank=True, null=True)),
                ('time_line_id', models.IntegerField()),
                ('timeline_type', models.CharField(max_length=10)),
                ('validity', models.IntegerField()),
                ('validity_type', models.IntegerField()),
                ('expiry_type', models.IntegerField()),
                ('expiry_date', models.DateTimeField()),
                ('percentage_value', models.FloatField()),
                ('absolute_amount', models.FloatField()),
                ('status', models.CharField(blank=True, max_length=30, null=True)),
                ('materialization', models.IntegerField(blank=True, null=True)),
                ('policy', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'request_timeline_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestTimelineDetailsHistory',
            fields=[
                ('request_timeline_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_timeline_id', models.IntegerField()),
                ('transaction_id', models.IntegerField()),
                ('series_group_id', models.IntegerField()),
                ('policy_history_id', models.IntegerField()),
                ('time_line_id', models.IntegerField()),
                ('timeline_type', models.CharField(max_length=10)),
                ('validity', models.IntegerField()),
                ('validity_type', models.IntegerField()),
                ('expiry_type', models.IntegerField()),
                ('expiry_date', models.DateTimeField()),
                ('percentage_value', models.FloatField()),
                ('absolute_amount', models.FloatField()),
                ('status', models.CharField(max_length=10)),
                ('materialization', models.IntegerField(blank=True, null=True)),
                ('policy', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'request_timeline_details_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestTypeMaster',
            fields=[
                ('request_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_type_name', models.CharField(max_length=20)),
                ('request_type_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'request_type_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequestViaFlightDetails',
            fields=[
                ('request_via_flight_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('series_request_id', models.IntegerField(blank=True, null=True)),
                ('request_details_history_id', models.IntegerField()),
                ('series_request_history_id', models.IntegerField()),
                ('origin', models.CharField(max_length=3)),
                ('destination', models.CharField(max_length=3)),
                ('airline_code', models.CharField(blank=True, max_length=2, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=10, null=True)),
                ('departure_date', models.DateTimeField(blank=True, null=True)),
                ('arrival_date', models.DateTimeField(blank=True, null=True)),
                ('flight_status', models.CharField(max_length=1)),
                ('option_id', models.IntegerField()),
                ('schedule_status', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'request_via_flight_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResetPassword',
            fields=[
                ('reset_token_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('url_token', models.CharField(max_length=200, unique=True)),
                ('used_status', models.CharField(max_length=1)),
                ('reset_token_type', models.CharField(max_length=2)),
                ('initiated_time', models.DateTimeField()),
                ('expiry_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reset_password',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ResponseDetails',
            fields=[
                ('response_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('transaction_master_id', models.IntegerField(blank=True, null=True)),
                ('response_fare', models.FloatField(blank=True, null=True)),
                ('response_date', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('response_status', models.IntegerField(blank=True, null=True)),
                ('response_user', models.IntegerField()),
                ('negotiation_autopilot_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'response_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewStatus',
            fields=[
                ('review_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_id', models.IntegerField(blank=True, null=True)),
                ('response_person_id', models.IntegerField(blank=True, null=True)),
                ('response_date', models.DateTimeField()),
                ('response_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesPromoCriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(blank=True, max_length=100, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('criteria_logical_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sales_promo_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesPromoFareMapping',
            fields=[
                ('sales_promo_fare_id', models.AutoField(primary_key=True, serialize=False)),
                ('sales_promo_mapping_id', models.IntegerField(blank=True, null=True)),
                ('group_size', models.IntegerField(blank=True, null=True)),
                ('discount_fare', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sales_promo_fare_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesPromoMappingDetails',
            fields=[
                ('sales_promo_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('sales_promo_matrix_id', models.IntegerField(blank=True, null=True)),
                ('days_to_departure', models.IntegerField(blank=True, null=True)),
                ('booked_load_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sales_promo_mapping_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesPromoMatrix',
            fields=[
                ('sales_promo_matrix_id', models.AutoField(primary_key=True, serialize=False)),
                ('sales_promo_matrix_name', models.CharField(blank=True, max_length=50, null=True)),
                ('sales_promo_matrix_type', models.CharField(blank=True, max_length=5, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'sales_promo_matrix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesPromoPolicyDetails',
            fields=[
                ('sales_promo_policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('sales_promo_policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'sales_promo_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SalesPromoPolicyMaster',
            fields=[
                ('sales_promo_policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('sales_promo_matrix_id', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('active_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sales_promo_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SavedReportDetails',
            fields=[
                ('saved_report_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_name', models.CharField(max_length=25)),
                ('report_type_id', models.IntegerField()),
                ('available_fields', models.CharField(max_length=150)),
                ('available_conditions', models.CharField(max_length=50)),
                ('created_by', models.IntegerField()),
                ('created_date', models.DateTimeField()),
                ('updated_by', models.IntegerField()),
                ('updated_date', models.DateTimeField()),
                ('deleted_by', models.IntegerField()),
                ('deleted_date', models.DateTimeField()),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'saved_report_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SavedReports',
            fields=[
                ('saved_report_id', models.AutoField(primary_key=True, serialize=False)),
                ('saved_report_category', models.CharField(max_length=500)),
                ('saved_report_name', models.CharField(max_length=50)),
                ('report_additional_info', models.TextField()),
                ('schedule_status', models.CharField(max_length=1)),
                ('report_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'saved_reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SavedReportsMapping',
            fields=[
                ('saved_reports_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('saved_report_id', models.IntegerField()),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'saved_reports_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SaveSearchDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_type', models.CharField(blank=True, max_length=255, null=True)),
                ('value_type', models.CharField(max_length=2)),
                ('value', models.TextField(blank=True, null=True)),
                ('group_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('filter_name', models.CharField(blank=True, max_length=50, null=True)),
                ('default_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'save_search_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleChangePnrDetails',
            fields=[
                ('schedule_change_pnr_id', models.AutoField(primary_key=True, serialize=False)),
                ('schedule_change_batch_id', models.IntegerField(blank=True, null=True)),
                ('pnr', models.CharField(blank=True, max_length=10, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('pnr_status', models.CharField(blank=True, max_length=1, null=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'schedule_change_pnr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleLogDetails',
            fields=[
                ('schedule_log_id', models.AutoField(primary_key=True, serialize=False)),
                ('saved_report_id', models.IntegerField()),
                ('mail_recipients', models.CharField(max_length=500)),
                ('schedule_actual_datetime', models.DateTimeField()),
                ('schedule_sent_datetime', models.DateTimeField(blank=True, null=True)),
                ('schedule_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'schedule_log_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleReportDetails',
            fields=[
                ('schedule_report_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('report_id', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('email_id', models.CharField(max_length=256)),
                ('frequency', models.CharField(max_length=32)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('run_at', models.TimeField(blank=True, null=True)),
                ('created_by', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_by', models.PositiveIntegerField()),
                ('updated_at', models.DateTimeField()),
                ('batch_run_date', models.DateTimeField()),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'schedule_report_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleReportMapping',
            fields=[
                ('schedule_report_mapping_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('schedule_report_id', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('condition_name', models.CharField(blank=True, max_length=35, null=True)),
                ('condition_value', models.CharField(blank=True, max_length=100, null=True)),
                ('rolling', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'schedule_report_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectorManagement',
            fields=[
                ('sector_id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(blank=True, max_length=3, null=True)),
                ('destination', models.CharField(blank=True, max_length=3, null=True)),
                ('active_status', models.CharField(blank=True, db_collation='keybcs2_bin', max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sector_management',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectorMapping',
            fields=[
                ('sector_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('origin', models.CharField(max_length=3)),
                ('destination', models.CharField(max_length=3)),
                ('operation_status', models.CharField(blank=True, max_length=1, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sector_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectorThresholdLimit',
            fields=[
                ('sector_threshold_id', models.AutoField(primary_key=True, serialize=False)),
                ('source', models.CharField(blank=True, max_length=5, null=True)),
                ('destination', models.CharField(blank=True, max_length=5, null=True)),
                ('threshold_limit', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'sector_threshold_limit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectorUserMapping',
            fields=[
                ('sector_user_id', models.AutoField(primary_key=True, serialize=False)),
                ('sector_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('primary_user', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sector_user_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SelectedCompetitorFareHistory',
            fields=[
                ('selected_competitor_fare_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('transaction_id', models.IntegerField(blank=True, null=True)),
                ('transaction_history_id', models.IntegerField(blank=True, null=True)),
                ('request_approved_flight_id', models.IntegerField(blank=True, null=True)),
                ('request_approve_history_flight_id', models.IntegerField(blank=True, null=True)),
                ('competitor_flight_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'selected_competitor_fare_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesFlightScheduleDetails',
            fields=[
                ('series_flight_schedule_id', models.AutoField(primary_key=True, serialize=False)),
                ('series_request_id', models.IntegerField()),
                ('alternate_series_request_id', models.IntegerField(blank=True, null=True)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('request_details_history_id', models.IntegerField(blank=True, null=True)),
                ('series_request_history_id', models.IntegerField(blank=True, null=True)),
                ('batch_id', models.IntegerField()),
                ('origin_airport_code', models.CharField(blank=True, max_length=3, null=True)),
                ('dest_airport_code', models.CharField(blank=True, max_length=3, null=True)),
                ('airlines_code', models.CharField(blank=True, max_length=7, null=True)),
                ('cabin', models.CharField(blank=True, max_length=10, null=True)),
                ('arrival_time', models.CharField(blank=True, max_length=5, null=True)),
                ('departure_time', models.CharField(blank=True, max_length=5, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=5, null=True)),
                ('flight_jounary_time', models.CharField(blank=True, max_length=5, null=True)),
                ('leg_count', models.IntegerField(blank=True, null=True)),
                ('routing', models.CharField(blank=True, max_length=11, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('series_weekdays', models.CharField(blank=True, max_length=13, null=True)),
                ('fare_filter_method', models.CharField(blank=True, max_length=30, null=True)),
                ('displacement_fare', models.FloatField(blank=True, null=True)),
                ('booking_profile_fare', models.IntegerField(blank=True, null=True)),
                ('competetor_fare', models.IntegerField(blank=True, null=True)),
                ('base_fare', models.FloatField(blank=True, null=True)),
                ('child_base_fare', models.FloatField(blank=True, null=True)),
                ('tax', models.FloatField(blank=True, null=True)),
                ('new_tax', models.FloatField(blank=True, null=True)),
                ('child_tax', models.FloatField(blank=True, null=True)),
                ('new_child_tax', models.FloatField()),
                ('currency_type', models.CharField(blank=True, max_length=3, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('sold', models.IntegerField(blank=True, null=True)),
                ('seat_availability', models.IntegerField(blank=True, null=True)),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('policy_matrix_id', models.IntegerField(blank=True, null=True)),
                ('policy_matrix_type', models.CharField(blank=True, max_length=5, null=True)),
                ('policy_currency_type', models.CharField(blank=True, max_length=5, null=True)),
                ('policy_days_to_departure', models.IntegerField(blank=True, null=True)),
                ('booked_load_factor', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.FloatField(blank=True, null=True)),
                ('policy_display_value', models.CharField(blank=True, max_length=10, null=True)),
                ('policy_discount_fare', models.FloatField(blank=True, null=True)),
                ('policy_child_discount_fare', models.FloatField(blank=True, null=True)),
                ('existing_adult_base_fare', models.FloatField(blank=True, null=True)),
                ('existing_adult_tax', models.FloatField(blank=True, null=True)),
                ('existing_child_base_fare', models.FloatField(blank=True, null=True)),
                ('existing_child_tax', models.FloatField(blank=True, null=True)),
                ('competitor_status', models.CharField(blank=True, max_length=1, null=True)),
                ('sales_promo_policy_matrix_type', models.CharField(blank=True, max_length=5, null=True)),
                ('sales_promo_policy_value', models.FloatField(blank=True, null=True)),
                ('sales_promo_policy_matrix_id', models.IntegerField(blank=True, null=True)),
                ('sales_promo_policy_id', models.IntegerField(blank=True, null=True)),
                ('sales_promo_policy_currency_type', models.CharField(blank=True, max_length=5, null=True)),
                ('sales_promo_discount_fare', models.FloatField(blank=True, null=True)),
                ('sales_promo_policy_display_value', models.CharField(blank=True, max_length=10, null=True)),
                ('sales_promo_booked_factor', models.IntegerField(blank=True, null=True)),
                ('original_base_fare', models.FloatField(blank=True, null=True)),
                ('sales_promo_policy_days_to_departure', models.IntegerField(blank=True, null=True)),
                ('surcharge', models.FloatField(blank=True, null=True)),
                ('surcharge_details', models.TextField(blank=True, null=True)),
                ('load_factor_type', models.CharField(blank=True, max_length=5, null=True)),
                ('forecast_load_factor', models.IntegerField(blank=True, null=True)),
                ('ancillary_fare', models.TextField(blank=True, null=True)),
                ('special_fare_type', models.TextField(blank=True, null=True)),
                ('approved_fare_details', models.TextField(blank=True, null=True)),
                ('approved_policy_details', models.TextField(blank=True, null=True)),
                ('lfid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series_flight_schedule_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesRequestDetails',
            fields=[
                ('series_request_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('number_of_passenger', models.IntegerField(blank=True, null=True)),
                ('number_of_adult', models.IntegerField(blank=True, null=True)),
                ('number_of_child', models.IntegerField(blank=True, null=True)),
                ('number_of_infant', models.IntegerField(blank=True, null=True)),
                ('cabin', models.CharField(blank=True, max_length=20, null=True)),
                ('start_time', models.CharField(blank=True, max_length=5, null=True)),
                ('end_time', models.CharField(blank=True, max_length=5, null=True)),
                ('baggage_allowance', models.CharField(blank=True, max_length=250, null=True)),
                ('ancillary', models.CharField(blank=True, max_length=50, null=True)),
                ('meals_code', models.CharField(blank=True, max_length=6, null=True)),
                ('pnr', models.CharField(blank=True, max_length=25, null=True)),
                ('expected_fare', models.FloatField(blank=True, null=True)),
                ('flexible_on_dates', models.CharField(max_length=1)),
                ('group_category_id', models.IntegerField(blank=True, null=True)),
                ('mapped_series_request_id', models.IntegerField(blank=True, null=True)),
                ('series_group_id', models.IntegerField(blank=True, null=True)),
                ('parent_series_group_id', models.IntegerField()),
                ('flight_number', models.CharField(blank=True, max_length=200, null=True)),
                ('current_load_factor', models.CharField(blank=True, max_length=100, null=True)),
                ('forecast_load_factor', models.CharField(blank=True, max_length=100, null=True)),
                ('future_load_factor', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_series_request_id', models.IntegerField()),
                ('flight_status', models.CharField(max_length=2)),
                ('foc_pax', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'series_request_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesRequestDetailsHistory',
            fields=[
                ('series_request_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_details_history_id', models.IntegerField()),
                ('series_request_id', models.IntegerField(blank=True, null=True)),
                ('request_id', models.IntegerField(blank=True, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('number_of_passenger', models.IntegerField(blank=True, null=True)),
                ('number_of_adult', models.IntegerField(blank=True, null=True)),
                ('number_of_child', models.IntegerField(blank=True, null=True)),
                ('number_of_infant', models.IntegerField(blank=True, null=True)),
                ('cabin', models.CharField(blank=True, max_length=20, null=True)),
                ('baggage_allowance', models.CharField(blank=True, max_length=250, null=True)),
                ('ancillary', models.CharField(blank=True, max_length=5, null=True)),
                ('meals_code', models.CharField(blank=True, max_length=5, null=True)),
                ('pnr', models.CharField(blank=True, max_length=25, null=True)),
                ('expected_fare', models.FloatField(blank=True, null=True)),
                ('flexible_on_date', models.CharField(max_length=1)),
                ('group_category_id', models.IntegerField(blank=True, null=True)),
                ('mapped_series_request_id', models.IntegerField(blank=True, null=True)),
                ('series_group_id', models.IntegerField(blank=True, null=True)),
                ('parent_series_group_id', models.IntegerField()),
                ('flight_number', models.CharField(blank=True, max_length=200, null=True)),
                ('current_load_factor', models.CharField(blank=True, max_length=100, null=True)),
                ('forecast_load_factor', models.CharField(blank=True, max_length=100, null=True)),
                ('future_load_factor', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_series_request_id', models.IntegerField()),
                ('modify_status', models.CharField(blank=True, max_length=1, null=True)),
                ('flight_status', models.CharField(max_length=2)),
                ('foc_pax', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'series_request_details_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SeriesViaFlightDetails',
            fields=[
                ('series_via_flight_id', models.AutoField(primary_key=True, serialize=False)),
                ('series_flight_schedule_id', models.IntegerField(blank=True, null=True)),
                ('origin_airport_code', models.CharField(max_length=3)),
                ('dest_airport_code', models.CharField(max_length=3)),
                ('airline_code', models.CharField(max_length=2)),
                ('flight_number', models.CharField(max_length=5)),
                ('departure_date', models.DateField()),
                ('arrival_date', models.DateField()),
                ('time_departure', models.CharField(max_length=5)),
                ('time_arrival', models.CharField(max_length=5)),
                ('base_fare', models.FloatField(blank=True, null=True)),
                ('baggage_fare', models.FloatField()),
                ('meals_fare', models.FloatField()),
                ('ancillary_fare', models.TextField(blank=True, null=True)),
                ('capacity', models.IntegerField()),
                ('sold', models.IntegerField()),
                ('seat_availability', models.IntegerField()),
                ('forecast_load_factor', models.IntegerField(blank=True, null=True)),
                ('surcharge', models.FloatField(blank=True, null=True)),
                ('discount_amount', models.FloatField()),
                ('discount_details', models.TextField(blank=True, null=True)),
                ('special_fare_type', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'series_via_flight_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceTaxDetails',
            fields=[
                ('service_tax_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('corporate_id', models.IntegerField()),
                ('reference_number', models.CharField(max_length=16)),
                ('agency_name', models.CharField(blank=True, max_length=100, null=True)),
                ('agent_email_id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(db_column='Status', max_length=1)),
                ('reference_type', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'service_tax_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SessionDetails',
            fields=[
                ('session_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=40)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('last_active_time', models.PositiveIntegerField()),
                ('expiry_time', models.PositiveIntegerField()),
                ('useragent', models.TextField(blank=True, null=True)),
                ('ipaddr', models.CharField(blank=True, max_length=46, null=True)),
                ('login_time', models.DateTimeField(blank=True, null=True)),
                ('active', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'session_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharedProcessingrecord',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'shared_processingrecord',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharedScheduledjob',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('job_name', models.CharField(max_length=100, unique=True)),
                ('job_func', models.CharField(max_length=200)),
                ('cron_schedule', models.CharField(max_length=50)),
                ('is_enabled', models.IntegerField()),
                ('last_run', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'shared_scheduledjob',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharedTaskprogress',
            fields=[
                ('task_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('task_name', models.CharField(max_length=255)),
                ('last_processed_id', models.IntegerField()),
                ('last_updated', models.DateTimeField()),
            ],
            options={
                'db_table': 'shared_taskprogress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrCategoryDetails',
            fields=[
                ('ssr_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('ssr_category_name', models.CharField(max_length=30)),
                ('display_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'ssr_category_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrDetails',
            fields=[
                ('ssr_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('ssr_master_id', models.IntegerField()),
                ('ssr_pax_id', models.IntegerField()),
                ('ssr_category_id', models.IntegerField()),
                ('ssr_code', models.CharField(max_length=50)),
                ('ssr_base_fare', models.FloatField()),
                ('ssr_tax', models.FloatField()),
                ('ssr_total_fare', models.FloatField()),
                ('emd_id', models.IntegerField(blank=True, null=True)),
                ('ssr_status', models.CharField(max_length=32)),
                ('remarks', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'ssr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrList',
            fields=[
                ('ssr_list_id', models.AutoField(primary_key=True, serialize=False)),
                ('ssr_category_id', models.IntegerField()),
                ('ssr_subcategory_id', models.IntegerField(blank=True, null=True)),
                ('ssr_code', models.CharField(max_length=10)),
                ('ssr_description', models.CharField(max_length=250)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('display_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'ssr_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrMaster',
            fields=[
                ('ssr_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('pnr', models.CharField(max_length=10)),
                ('ssr_amount', models.FloatField()),
                ('updated_by', models.IntegerField()),
                ('ssr_updated_date', models.DateTimeField()),
                ('last_transaction', models.CharField(max_length=1)),
                ('status', models.CharField(max_length=32)),
                ('ssr_category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ssr_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrMatrixDetails',
            fields=[
                ('matrix_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('matrix_master_id', models.IntegerField()),
                ('request_criteria_field_id', models.IntegerField()),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('criteria_value', models.CharField(blank=True, db_collation='utf8mb3_general_ci', max_length=200, null=True)),
            ],
            options={
                'db_table': 'ssr_matrix_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrMatrixMaster',
            fields=[
                ('matrix_id', models.AutoField(primary_key=True, serialize=False)),
                ('matrix_name', models.CharField(blank=True, max_length=48, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ssr_matrix_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrPaxDetails',
            fields=[
                ('ssr_pax_id', models.AutoField(primary_key=True, serialize=False)),
                ('pnr_blocking_id', models.IntegerField()),
                ('via_flight_id', models.IntegerField()),
                ('pax_reference_id', models.CharField(blank=True, max_length=200, null=True)),
                ('passenger_id', models.IntegerField()),
                ('status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'ssr_pax_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrPaxGrouping',
            fields=[
                ('ssr_pax_grouping_id', models.AutoField(primary_key=True, serialize=False)),
                ('ssr_details_id', models.IntegerField()),
                ('ssr_id', models.CharField(blank=True, max_length=200, null=True)),
                ('ssr_weight', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'ssr_pax_grouping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrPolicyDetails',
            fields=[
                ('policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField()),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'ssr_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrPolicyMaster',
            fields=[
                ('policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('matrix_id', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('active_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('policy_string', models.TextField()),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ssr_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrSubcategoryDetails',
            fields=[
                ('ssr_subcategory_id', models.AutoField(primary_key=True, serialize=False)),
                ('ssr_category_id', models.IntegerField()),
                ('ssr_subcategory_name', models.CharField(max_length=30)),
                ('display_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'ssr_subcategory_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrTemp',
            fields=[
                ('ssr_temp_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('series_request_id', models.IntegerField()),
                ('passenger_id', models.CharField(max_length=15)),
                ('pnr', models.CharField(max_length=15)),
                ('name', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=25)),
                ('fare', models.FloatField()),
                ('amount_diff', models.FloatField()),
                ('status', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'ssr_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsrTempMaster',
            fields=[
                ('ssr_temp_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('request_master_id', models.IntegerField(blank=True, null=True)),
                ('series_request_id', models.IntegerField(blank=True, null=True)),
                ('current_status', models.CharField(blank=True, max_length=15, null=True)),
                ('requested_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ssr_temp_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaticFareCriteriaMaster',
            fields=[
                ('criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('criteria_name', models.CharField(blank=True, max_length=100, null=True)),
                ('criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('criteria_logical_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'static_fare_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaticFareDetails',
            fields=[
                ('static_fare_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_approved_flight_id', models.IntegerField()),
                ('via_flight_id', models.IntegerField()),
                ('fare_type_policy_id', models.IntegerField()),
                ('fare_type_matrix_id', models.IntegerField()),
                ('fare_policy_id', models.IntegerField()),
                ('fare_matrix_id', models.IntegerField()),
                ('days_to_departure', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('sold', models.IntegerField()),
                ('seat_availability', models.IntegerField()),
                ('booked_load', models.IntegerField()),
                ('forecast_load', models.IntegerField(blank=True, null=True)),
                ('current_group_count', models.IntegerField(blank=True, null=True)),
                ('group_size', models.CharField(max_length=5)),
                ('quoted_date', models.DateTimeField()),
                ('fare_policy_details', models.TextField()),
            ],
            options={
                'db_table': 'static_fare_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaticFarePolicyDetails',
            fields=[
                ('policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'static_fare_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StaticFarePolicyMaster',
            fields=[
                ('policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('booking_profile_id', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('matrix_type', models.CharField(blank=True, max_length=5, null=True)),
                ('active_date', models.DateTimeField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'static_fare_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StatusDetails',
            fields=[
                ('status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_code', models.CharField(blank=True, max_length=5, null=True)),
                ('status_name', models.CharField(blank=True, max_length=150, null=True)),
                ('front_end', models.CharField(blank=True, max_length=1, null=True)),
                ('back_end', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'status_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StdTplDetails',
            fields=[
                ('std_tpl_id', models.AutoField(primary_key=True, serialize=False)),
                ('std_tpl_name', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'std_tpl_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubAgencyMappingDetails',
            fields=[
                ('sub_agency_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_id', models.IntegerField()),
                ('mapped_corporate_id', models.IntegerField()),
                ('status', models.CharField(max_length=7)),
                ('requested_by', models.IntegerField()),
                ('requested_date', models.DateTimeField()),
                ('responded_by', models.IntegerField()),
                ('responded_date', models.DateTimeField()),
                ('remarks', models.CharField(max_length=35)),
            ],
            options={
                'db_table': 'sub_agency_mapping_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SupportTypeMaster',
            fields=[
                ('support_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('support_type_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'support_type_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurchargeMappingDetails',
            fields=[
                ('surcharge_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('surcharge_details_id', models.IntegerField(blank=True, null=True)),
                ('group_size', models.IntegerField(blank=True, null=True)),
                ('surcharge', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'surcharge_mapping_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurchargeMatrix',
            fields=[
                ('surcharge_matrix_id', models.AutoField(primary_key=True, serialize=False)),
                ('surcharge_matrix_name', models.CharField(blank=True, max_length=50, null=True)),
                ('load_factor_type', models.CharField(blank=True, max_length=5, null=True)),
                ('surcharge_matrix_type', models.CharField(blank=True, max_length=5, null=True)),
                ('currency_type', models.CharField(blank=True, max_length=5, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'surcharge_matrix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurchargeMatrixDetails',
            fields=[
                ('surcharge_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('surcharge_matrix_id', models.IntegerField(blank=True, null=True)),
                ('days_to_departure', models.IntegerField(blank=True, null=True)),
                ('booked_load_factor', models.IntegerField(blank=True, null=True)),
                ('forecast_load_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'surcharge_matrix_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurchargePolicyDetails',
            fields=[
                ('surcharge_policy_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('surcharge_policy_id', models.IntegerField(blank=True, null=True)),
                ('criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'surcharge_policy_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurchargePolicyMaster',
            fields=[
                ('surcharge_policy_id', models.AutoField(primary_key=True, serialize=False)),
                ('surcharge_policy_name', models.CharField(blank=True, max_length=100, null=True)),
                ('surcharge_matrix_id', models.IntegerField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active_status', models.CharField(blank=True, max_length=1, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('policy_dow', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('updated_by', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'surcharge_policy_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemMStatus',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('status_name', models.CharField(max_length=50, unique=True)),
                ('status_code', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'db_table': 'system_m_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemMUserTypes',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('user_type', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'system_m_user_types',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('key_id', models.AutoField(primary_key=True, serialize=False)),
                ('key_index', models.CharField(blank=True, max_length=100, null=True)),
                ('key_name', models.CharField(blank=True, max_length=100, null=True)),
                ('extra_key_name', models.CharField(blank=True, max_length=100, null=True)),
                ('key_value', models.TextField(blank=True, null=True)),
                ('value_type', models.CharField(blank=True, max_length=1, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('backend_status', models.CharField(blank=True, max_length=1, null=True)),
                ('last_updated_by', models.IntegerField(blank=True, null=True)),
                ('last_updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'system_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemTResetPassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_token', models.CharField(max_length=200, unique=True)),
                ('used_status', models.CharField(max_length=1)),
                ('reset_token_type', models.CharField(max_length=2)),
                ('initiated_time', models.DateTimeField()),
                ('expiry_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'system_t_reset_password',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemTUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
                ('email_id', models.CharField(max_length=254, unique=True)),
                ('title', models.CharField(max_length=16)),
                ('phone_number', models.CharField(max_length=32)),
                ('last_login_ip', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'system_t_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemTUsersGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'system_t_users_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SystemTUsersUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'system_t_users_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TakeControlDetails',
            fields=[
                ('take_control_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_master_id', models.IntegerField()),
                ('reference_id', models.IntegerField()),
                ('process_type', models.CharField(blank=True, max_length=25, null=True)),
                ('opened_by', models.IntegerField()),
                ('opened_time', models.DateTimeField()),
                ('control_status', models.CharField(max_length=15)),
                ('unique_status', models.CharField(blank=True, max_length=11, null=True)),
                ('action_pnr', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'take_control_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TaxBreakupDetails',
            fields=[
                ('tax_breakup_id', models.AutoField(primary_key=True, serialize=False)),
                ('series_flight_schedule_id', models.IntegerField(blank=True, null=True)),
                ('pax_type', models.CharField(blank=True, max_length=10, null=True)),
                ('tax_index', models.CharField(blank=True, max_length=10, null=True)),
                ('tax_code', models.CharField(blank=True, max_length=30, null=True)),
                ('charge_code', models.CharField(blank=True, max_length=10, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('tax_description', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'tax_breakup_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TemplateDetails',
            fields=[
                ('template_id', models.AutoField(primary_key=True, serialize=False)),
                ('template_name', models.CharField(blank=True, max_length=50, null=True)),
                ('class_tpl_name', models.CharField(blank=True, max_length=50, null=True)),
                ('template_type', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'template_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TenderDetails',
            fields=[
                ('tender_id', models.AutoField(primary_key=True, serialize=False)),
                ('tender_name', models.CharField(max_length=60)),
                ('organisation_name', models.CharField(max_length=60)),
                ('source_information', models.CharField(max_length=60)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=2)),
                ('created_on', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('responded_on', models.DateTimeField()),
                ('responded_by', models.IntegerField()),
                ('last_updated_on', models.DateTimeField()),
                ('last_updated_by', models.IntegerField()),
            ],
            options={
                'db_table': 'tender_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TenderOptionDetails',
            fields=[
                ('tender_option_id', models.AutoField(primary_key=True, serialize=False)),
                ('tender_id', models.IntegerField()),
                ('request_master_id', models.IntegerField()),
                ('status', models.CharField(max_length=2)),
                ('created_on', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('created_for', models.IntegerField()),
            ],
            options={
                'db_table': 'tender_option_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TenderParticipantDetails',
            fields=[
                ('tender_participant_id', models.AutoField(primary_key=True, serialize=False)),
                ('tender_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('participated_date', models.DateTimeField()),
                ('participation_status', models.CharField(max_length=2)),
                ('participant_remarks', models.TextField()),
                ('actioned_by', models.IntegerField()),
            ],
            options={
                'db_table': 'tender_participant_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TenderPnrDetails',
            fields=[
                ('tender_pnr_id', models.AutoField(primary_key=True, serialize=False)),
                ('tender_id', models.IntegerField()),
                ('pnr', models.CharField(max_length=6)),
                ('request_master_id', models.IntegerField()),
                ('request_approved_flight_id', models.IntegerField()),
                ('via_flight_id', models.IntegerField()),
                ('status', models.CharField(max_length=10)),
                ('created_date', models.DateTimeField()),
                ('created_by', models.IntegerField()),
                ('awarded_on', models.DateTimeField()),
                ('awarded_by', models.IntegerField()),
                ('awarded_participant_id', models.IntegerField()),
            ],
            options={
                'db_table': 'tender_pnr_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TenderStatusDetails',
            fields=[
                ('tender_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('status_code', models.CharField(max_length=2)),
                ('status_name', models.CharField(max_length=32)),
                ('type', models.CharField(max_length=10)),
                ('display_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'tender_status_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketingDetails',
            fields=[
                ('ticketing_id', models.AutoField(primary_key=True, serialize=False)),
                ('travel_bank_id', models.IntegerField(blank=True, null=True)),
                ('ticket_number', models.CharField(blank=True, max_length=100, null=True)),
                ('fare_basis_code', models.CharField(blank=True, max_length=20, null=True)),
                ('promo_code', models.CharField(blank=True, max_length=20, null=True)),
                ('ticketed_date', models.DateTimeField(blank=True, null=True)),
                ('ticketed_by', models.IntegerField(blank=True, null=True)),
                ('ticket_status', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'ticketing_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeLineMatrix',
            fields=[
                ('time_line_id', models.AutoField(primary_key=True, serialize=False)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('days_to_departure', models.IntegerField(blank=True, null=True)),
                ('payment_validity', models.IntegerField(blank=True, null=True)),
                ('payment_type_id', models.IntegerField(blank=True, null=True)),
                ('passenger_validity', models.IntegerField(blank=True, null=True)),
                ('passenger_type_id', models.IntegerField(blank=True, null=True)),
                ('fare_validity', models.IntegerField(blank=True, null=True)),
                ('fare_type_id', models.IntegerField(blank=True, null=True)),
                ('time_line_matrix_list_id', models.IntegerField()),
                ('expiry_type_id', models.IntegerField(blank=True, null=True)),
                ('payment_expiry_type_id', models.IntegerField(blank=True, null=True)),
                ('passenger_expiry_type_id', models.IntegerField(blank=True, null=True)),
                ('payment_percentage', models.FloatField(blank=True, null=True)),
                ('payment_in_percent', models.CharField(max_length=3)),
                ('payment_currency', models.CharField(blank=True, max_length=5, null=True)),
                ('materialization', models.IntegerField(blank=True, null=True)),
                ('policy', models.CharField(blank=True, max_length=5, null=True)),
                ('penalty_value', models.IntegerField(blank=True, null=True)),
                ('penalty_type_id', models.IntegerField(blank=True, null=True)),
                ('penalty_expiry_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'time_line_matrix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeLineMatrixCriteriaMaster',
            fields=[
                ('time_line_matrix_criteria_id', models.AutoField(primary_key=True, serialize=False)),
                ('time_line_matrix_criteria_name', models.CharField(blank=True, max_length=100, null=True)),
                ('time_line_matrix_criteria_type', models.CharField(blank=True, max_length=3, null=True)),
                ('display_status', models.CharField(blank=True, max_length=1, null=True)),
                ('time_line_matrix_criteria_logical_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'time_line_matrix_criteria_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeLineMatrixDetails',
            fields=[
                ('time_line_matrix_details_id', models.AutoField(primary_key=True, serialize=False)),
                ('time_line_matrix_master_id', models.IntegerField(blank=True, null=True)),
                ('time_line_matrix_criteria_id', models.IntegerField(blank=True, null=True)),
                ('loop_value', models.IntegerField(blank=True, null=True)),
                ('operator_id', models.IntegerField(blank=True, null=True)),
                ('policy_value', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'time_line_matrix_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeLineMatrixList',
            fields=[
                ('time_line_matrix_list_id', models.AutoField(primary_key=True, serialize=False)),
                ('time_line_matrix_name', models.CharField(blank=True, max_length=48, null=True)),
                ('activation_status', models.CharField(blank=True, max_length=1, null=True)),
                ('default_status', models.CharField(blank=True, max_length=1, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'time_line_matrix_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeLineMatrixMaster',
            fields=[
                ('time_line_matrix_master_id', models.AutoField(primary_key=True, serialize=False)),
                ('time_line_matrix_list_id', models.IntegerField(blank=True, null=True)),
                ('time_line_policy_name', models.CharField(blank=True, max_length=48, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('activation_status', models.CharField(blank=True, max_length=1, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('policy_dow', models.CharField(blank=True, max_length=100, null=True)),
                ('create_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'time_line_matrix_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimeLinePaymentDetails',
            fields=[
                ('time_line_payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('time_line_id', models.IntegerField(blank=True, null=True)),
                ('payment_validity', models.IntegerField(blank=True, null=True)),
                ('payment_validity_type', models.IntegerField(blank=True, null=True)),
                ('payment_expiry_type', models.IntegerField(blank=True, null=True)),
                ('payment_percentage', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'time_line_payment_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionHistory',
            fields=[
                ('transaction_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('review_status_id', models.IntegerField()),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('transaction_id', models.IntegerField(blank=True, null=True)),
                ('request_master_history_id', models.IntegerField(blank=True, null=True)),
                ('fare_advised', models.FloatField()),
                ('child_fare', models.FloatField()),
                ('infant_fare', models.FloatField()),
                ('discount', models.FloatField(blank=True, null=True)),
                ('child_discount', models.FloatField(blank=True, null=True)),
                ('infant_discount', models.FloatField(blank=True, null=True)),
                ('evaluated_fare', models.FloatField()),
                ('exchange_rate', models.FloatField()),
                ('fare_negotiable', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=20, null=True)),
                ('auto_approval', models.CharField(max_length=1)),
                ('fare_validity', models.IntegerField(blank=True, null=True)),
                ('fare_validity_type_id', models.IntegerField(blank=True, null=True)),
                ('fare_expiry_type', models.IntegerField()),
                ('payment_validity', models.IntegerField()),
                ('payment_validity_type', models.IntegerField()),
                ('payment_expiry_type', models.IntegerField()),
                ('passenger_validity', models.IntegerField()),
                ('passenger_validity_type', models.IntegerField()),
                ('passenger_expiry_date', models.DateTimeField()),
                ('passenger_expiry_type', models.IntegerField()),
                ('transaction_date', models.DateTimeField(blank=True, null=True)),
                ('fare_expiry_date', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=25, null=True)),
                ('payment_expiry_date', models.DateTimeField()),
                ('active_status', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('response_source', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=50, null=True)),
                ('cancel_policy_id', models.IntegerField()),
                ('time_line_id', models.IntegerField()),
                ('negotiation_policy_id', models.IntegerField()),
                ('sales_promo_status', models.CharField(max_length=1)),
                ('payment_in_percent', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'transaction_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionMaster',
            fields=[
                ('transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('airlines_request_id', models.IntegerField(blank=True, null=True)),
                ('request_master_history_id', models.IntegerField(blank=True, null=True)),
                ('fare_advised', models.FloatField()),
                ('child_fare', models.FloatField()),
                ('infant_fare', models.FloatField()),
                ('exchange_rate', models.FloatField()),
                ('fare_negotiable', models.CharField(blank=True, max_length=20, null=True)),
                ('auto_approval', models.CharField(max_length=1)),
                ('transaction_fee', models.CharField(blank=True, max_length=1, null=True)),
                ('fare_validity', models.IntegerField(blank=True, null=True)),
                ('fare_validity_type_id', models.IntegerField(blank=True, null=True)),
                ('fare_expiry_type', models.IntegerField()),
                ('payment_validity', models.IntegerField()),
                ('payment_validity_type', models.IntegerField()),
                ('payment_expiry_type', models.IntegerField()),
                ('passenger_validity', models.IntegerField()),
                ('passenger_validity_type', models.IntegerField()),
                ('passenger_expiry_type', models.IntegerField()),
                ('transaction_date', models.DateTimeField(blank=True, null=True)),
                ('fare_expiry_date', models.DateTimeField()),
                ('payment_expiry_date', models.DateTimeField()),
                ('passenger_expiry_date', models.DateTimeField()),
                ('active_status', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('alternate_flight_remarks', models.TextField(blank=True, null=True)),
                ('timelimit_remarks', models.TextField(blank=True, null=True)),
                ('response_source', models.CharField(blank=True, max_length=50, null=True)),
                ('cancel_policy_id', models.IntegerField()),
                ('time_line_id', models.IntegerField()),
                ('negotiation_policy_id', models.IntegerField()),
                ('sales_promo_status', models.CharField(max_length=1)),
                ('payment_in_percent', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'transaction_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TravelBankMaster',
            fields=[
                ('travel_bank_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_insight_id', models.IntegerField(blank=True, null=True)),
                ('account_number', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.CharField(blank=True, max_length=100, null=True)),
                ('account_balance', models.FloatField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'travel_bank_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TravelBankTransactionDetails',
            fields=[
                ('travel_bank_transaction_id', models.AutoField(primary_key=True, serialize=False)),
                ('travel_bank_id', models.IntegerField(blank=True, null=True)),
                ('emd_id', models.IntegerField(blank=True, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=5, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('transaction_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=2, null=True)),
            ],
            options={
                'db_table': 'travel_bank_transaction_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('corporate_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=16, null=True)),
                ('first_name', models.CharField(blank=True, max_length=32, null=True)),
                ('last_name', models.CharField(blank=True, max_length=32, null=True)),
                ('email_id', models.CharField(blank=True, max_length=100, null=True)),
                ('user_password', models.CharField(blank=True, max_length=90, null=True)),
                ('user_address', models.CharField(blank=True, max_length=256, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True)),
                ('approved_status', models.CharField(max_length=1)),
                ('email_verification_status', models.CharField(max_length=1)),
                ('confirm_code', models.CharField(blank=True, max_length=100, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('time_zone_interval', models.CharField(blank=True, max_length=40, null=True)),
                ('time_zone_key', models.CharField(blank=True, max_length=352, null=True)),
                ('ip_address', models.CharField(max_length=40)),
                ('country_code', models.CharField(blank=True, max_length=16, null=True)),
                ('last_login_ip_address', models.CharField(max_length=40)),
                ('last_login_date', models.DateTimeField()),
                ('country_number', models.CharField(blank=True, max_length=15, null=True)),
                ('city_id', models.IntegerField(blank=True, null=True)),
                ('user_zip_code', models.CharField(blank=True, max_length=36, null=True)),
                ('user_name', models.CharField(blank=True, max_length=36, null=True)),
            ],
            options={
                'db_table': 'user_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserEmailMapping',
            fields=[
                ('user_email_mapping_id', models.AutoField(primary_key=True, serialize=False)),
                ('email_setting_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('email_status', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'user_email_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserGuideHistory',
            fields=[
                ('user_guide_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=50, null=True)),
                ('user_guide_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_guide_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserLevelSettings',
            fields=[
                ('key_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('key_name', models.CharField(blank=True, max_length=100, null=True)),
                ('key_value', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=1, null=True)),
                ('last_updated_by', models.IntegerField(blank=True, null=True)),
                ('last_updated_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_level_settings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserPasswordMapping',
            fields=[
                ('password_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('last_updated_password', models.CharField(max_length=40)),
                ('last_updated_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_password_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserTypeDetails',
            fields=[
                ('user_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_type_name', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'user_type_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViaFlightDetails',
            fields=[
                ('via_flight_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_approved_flight_id', models.IntegerField(blank=True, null=True)),
                ('origin', models.CharField(blank=True, max_length=4, null=True)),
                ('destination', models.CharField(blank=True, max_length=4, null=True)),
                ('airline_code', models.CharField(blank=True, max_length=3, null=True)),
                ('flight_number', models.CharField(blank=True, max_length=5, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('departure_time', models.TimeField(blank=True, null=True)),
                ('arrival_date', models.DateField(blank=True, null=True)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('displacement_fare', models.FloatField()),
                ('discount_amount', models.FloatField()),
                ('base_fare', models.FloatField()),
                ('baggauge_fare', models.FloatField()),
                ('meals_fare', models.FloatField()),
                ('capacity', models.IntegerField()),
                ('sold', models.IntegerField()),
                ('seat_availability', models.IntegerField()),
                ('surcharge', models.FloatField(blank=True, null=True)),
                ('ancillary_fare', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'via_flight_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ViaFlightHistory',
            fields=[
                ('via_flight_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('request_approved_flight_history_id', models.IntegerField(blank=True, null=True)),
                ('origin', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=4, null=True)),
                ('destination', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=4, null=True)),
                ('airline_code', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=3, null=True)),
                ('flight_number', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=5, null=True)),
                ('departure_date', models.DateField(blank=True, null=True)),
                ('departure_time', models.TimeField(blank=True, null=True)),
                ('arrival_date', models.DateField(blank=True, null=True)),
                ('arrival_time', models.TimeField(blank=True, null=True)),
                ('baggauge_fare', models.FloatField()),
                ('meals_fare', models.FloatField()),
                ('tiger_connect_fare', models.FloatField()),
                ('capacity', models.IntegerField()),
                ('sold', models.IntegerField()),
                ('seat_availability', models.IntegerField()),
                ('fare_type', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=15, null=True)),
                ('fare_class', models.CharField(db_collation='latin1_swedish_ci', max_length=3)),
                ('rule_number', models.CharField(db_collation='latin1_swedish_ci', max_length=10)),
                ('fare_sequence', models.CharField(db_collation='latin1_swedish_ci', max_length=5)),
                ('fare_application_type', models.CharField(db_collation='latin1_swedish_ci', max_length=15)),
                ('origin_airport_name', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=200, null=True)),
                ('dest_airport_name', models.CharField(blank=True, db_collation='latin1_swedish_ci', max_length=200, null=True)),
                ('surcharge', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'via_flight_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowEngineEdge',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'workflow_engine_edge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowEngineNode',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
                ('config', models.JSONField()),
                ('position_x', models.IntegerField()),
                ('position_y', models.IntegerField()),
            ],
            options={
                'db_table': 'workflow_engine_node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowEngineWorkflow',
            fields=[
                ('id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('mode', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'workflow_engine_workflow',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QueryTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('configuration', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
